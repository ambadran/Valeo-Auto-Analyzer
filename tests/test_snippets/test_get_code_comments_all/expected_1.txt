[CodeComment(comment='/* ********************************************************************** */\n/* Sourcefile: Idp.c                                                      */\n/*                                                                        */\n/* Department: VSeA R&D SWENG OPS 1 OP                                    */\n/*                                                                        */\n/* SW version:                                                            */\n/*   swc_major_version=01                                                 */\n/*   swc_minor_version=10                                                 */\n/*                                                                        */\n/*                                                                        */\n/* ********************************************************************** */\n/* Copyright (C) Valeo Siemens eAutomotive Germany GmbH 2022              */\n/* All Rights Reserved.  Confidential                                     */\n/* ********************************************************************** */', start_line_num=1, end_line_num=14, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*!\n * \\defgroup   IDP\n * Provides diagnostic data, which can be transfered\n * via CAN bus (e.g. with UDS 0x22)\n * @{\n */', start_line_num=16, end_line_num=21, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*================== [includes] =============================================*/\n/*! \\misra PRQA 0380 "Number of included macro definitions cannot be easily reduced, build environment can handle more\nmacro definitions than 4095 without issue." */', start_line_num=24, end_line_num=26, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*PRQA S 0380*/', start_line_num=27, end_line_num=27, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* EcuProdDataParamOem */', start_line_num=29, end_line_num=29, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* BUS Knockout data */', start_line_num=30, end_line_num=30, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* Programming preconditions */', start_line_num=31, end_line_num=31, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* Production mode data */', start_line_num=34, end_line_num=34, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* For variable DID_0410_BootloaderTPBlocksize */', start_line_num=35, end_line_num=35, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* DID F1B8 */', start_line_num=40, end_line_num=40, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*================== [defines] ==============================================*/', start_line_num=46, end_line_num=46, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*================== [type definitions] =====================================*/', start_line_num=53, end_line_num=53, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*================== [local data] ===========================================*/\n/*! \\misra PRQA 4800 "This define automatically generated" */', start_line_num=55, end_line_num=56, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 4800 */', start_line_num=57, end_line_num=57, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* block 1 */', start_line_num=62, end_line_num=62, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* block 2 */', start_line_num=63, end_line_num=63, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* block 3 */', start_line_num=64, end_line_num=64, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* block 4 */', start_line_num=65, end_line_num=65, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* -1 due to DownGradeProtection */', start_line_num=66, end_line_num=66, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* Ver_80114 */', start_line_num=70, end_line_num=70, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* Ver_80124 */', start_line_num=71, end_line_num=71, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* Ver_80125 */', start_line_num=72, end_line_num=72, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* Ver_80126 */', start_line_num=73, end_line_num=73, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* Ver_80127 */', start_line_num=74, end_line_num=74, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* Ver_80128 */', start_line_num=75, end_line_num=75, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* Ver_DSDL */', start_line_num=76, end_line_num=76, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* Ver_DUL */', start_line_num=77, end_line_num=77, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* Ver_SFD */', start_line_num=78, end_line_num=78, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* Ver_SWAP */', start_line_num=79, end_line_num=79, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* Ver_ORU */', start_line_num=80, end_line_num=80, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* Ver_PMode */', start_line_num=81, end_line_num=81, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* Ver_WKMS */', start_line_num=82, end_line_num=82, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*SWID_timestamp*/', start_line_num=85, end_line_num=85, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*SWID_calibset*/', start_line_num=88, end_line_num=88, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* change request: VWMEB-Inv-207330\n * DID length changed to 20, NVM block size remains 21 to preserve NVM layout.\n * The DCM-generated array type must not be used, as it is 20 bytes long,\n * and NVM read will write the 21th element too.*/', start_line_num=102, end_line_num=105, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* change request: VWMEB-Inv-207330 */', start_line_num=115, end_line_num=115, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* change request: VWMEB-Inv-207330 */', start_line_num=125, end_line_num=125, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 4800 "This define automatically generated" */', start_line_num=139, end_line_num=139, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 4800 */', start_line_num=140, end_line_num=140, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 4800 "This define automatically generated" */', start_line_num=143, end_line_num=143, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 4800 */', start_line_num=144, end_line_num=144, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*\n @@ SYMBOL = F197_VWSystemNameOrEngine\n @@ A2L_TYPE = STRING 13\n @@ DESCRIPTION = "F197 VWSystemNameOrEngine"\n @@ GROUP = IDP\n @@ END\n */', start_line_num=147, end_line_num=153, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*\n @@ SYMBOL = F1AD_EngineCodeLetters\n @@ A2L_TYPE = STRING 4\n @@ DESCRIPTION = "F1AD EngineCodeLetters"\n @@ GROUP = SWID\n @@ END\n */', start_line_num=159, end_line_num=165, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 4800 "This define automatically generated" */', start_line_num=169, end_line_num=169, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 4800 */', start_line_num=170, end_line_num=170, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 4800 "This define automatically generated" */', start_line_num=173, end_line_num=173, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 4800 */', start_line_num=174, end_line_num=174, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 2021 "This tentative definition is intended" */', start_line_num=179, end_line_num=179, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 2021 */\n/*! \\misra PRQA 2021 "This tentative definition is intended" */', start_line_num=180, end_line_num=181, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 2021 */\n/*! \\misra PRQA 2021 "This tentative definition is intended" */', start_line_num=182, end_line_num=183, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 2021 */\n/* change request: VWMEB-Inv-207330 */', start_line_num=184, end_line_num=185, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 4800 "This define automatically generated" */', start_line_num=187, end_line_num=187, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 4800 */', start_line_num=188, end_line_num=188, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 4800 "This define automatically generated" */', start_line_num=191, end_line_num=191, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 4800 */', start_line_num=192, end_line_num=192, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* block 1 */', start_line_num=197, end_line_num=197, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* block 2 */', start_line_num=198, end_line_num=198, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* block 3 */', start_line_num=199, end_line_num=199, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* block 4 */', start_line_num=200, end_line_num=200, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* -1 due to DownGradeProtection */', start_line_num=201, end_line_num=201, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* -1 due to DownGradeProtection */', start_line_num=203, end_line_num=203, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* -1 due to DownGradeProtection */', start_line_num=213, end_line_num=213, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* -1 due to DownGradeProtection */', start_line_num=223, end_line_num=223, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 1504 "The variable used in other component too" */', start_line_num=231, end_line_num=231, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 1504 */', start_line_num=232, end_line_num=232, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 1504 "The variable used in other component too" */', start_line_num=240, end_line_num=240, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 1504 */', start_line_num=241, end_line_num=241, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*\n@@ SYMBOL = Idp_ExpectedModelType\n@@ A2L_TYPE = MEASURE\n@@ DATA_TYPE = UBYTE\n@@ DESCRIPTION = "Stored value of Expected_model_type DID. The 0-3 bits define the model type"\n@@ GROUP = IDP\n@@ END\n*/', start_line_num=246, end_line_num=253, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 1504 "The variable used in other component too" */', start_line_num=254, end_line_num=254, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 1504 */', start_line_num=255, end_line_num=255, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*\n@@ SYMBOL = KnockOutTestBit\n@@ A2L_TYPE = MEASURE\n@@ DATA_TYPE = UBYTE\n@@ DESCRIPTION = "Test bit for KnockOut from UDS service"\n@@ GROUP = IDP\n@@ END\n*/', start_line_num=257, end_line_num=264, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 4800 "This define automatically generated" */', start_line_num=267, end_line_num=267, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 4800 */', start_line_num=268, end_line_num=268, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*================== [prototype of local functions] =========================*/\n/*! \\misra PRQA 4800 "This define automatically generated" */', start_line_num=271, end_line_num=272, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 4800 */', start_line_num=273, end_line_num=273, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* Declaration of static function Idp_ValidateAdminTable() */', start_line_num=276, end_line_num=276, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* Declaration of static function Idp_ReadDIDFromInfoTable() */\n/*! \\misra PRQA 3432 "Macro expansion does not result in expression\nand according to the Coding Guideline rule 4.6 AUTOSAR Compiler Abstraction should be used" */', start_line_num=278, end_line_num=280, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 3432 */\n/*! \\misra PRQA 3432 "Macro expansion does not result in expression\nand according to the Coding Guideline rule 4.6 AUTOSAR Compiler Abstraction should be used" */', start_line_num=283, end_line_num=285, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 3432 */', start_line_num=288, end_line_num=288, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment="/*================== [definition of local functions] ========================*/\n/*****************************************************************************/\n/*!\n * \\fn      FUNC(boolean, RTE_CODE) Idp_ValidateAdminTable (const t_AdminTable* pAdminTable)\n * \\brief   This function checks that the AdminTable is pointing to valid memory space.\n * \\param   [in] pAdminTable: AdminTable start address\n * \\param   [out] pAdminTable: AdminTable start address\n * \\param   [out] retStatus: The status of the function's execution.\n * \\return  boolean   Return the status of AdminTable\n * \\retval  TRUE      AdminTable is valid\n * \\retval  FALSE     AdminTable is invalid\n */\n/*****************************************************************************/", start_line_num=291, end_line_num=303, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 0310 "chkprg_is_valid_rom_addr" function checks that after the cast\n   operator it is pointing to valid memory space." */', start_line_num=309, end_line_num=310, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0310 */', start_line_num=311, end_line_num=311, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* Check if admin-Table is valid */', start_line_num=313, end_line_num=313, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* Check if valid marker is set and block is not invalidated */\n/* Function "chkprg_is_marker_set" has no side effect */', start_line_num=317, end_line_num=318, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 3415 "The logical operand is right" */', start_line_num=321, end_line_num=321, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 3415 */', start_line_num=322, end_line_num=322, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* Check that info table is a valid pointer in PFlash */\n/*! \\misra PRQA 0310 "chkprg_is_valid_rom_addr" function checks that after the cast\n            operator it is pointing to valid memory space." */', start_line_num=326, end_line_num=328, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0310 */', start_line_num=329, end_line_num=329, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*****************************************************************************/\n/*!\n * \\fn      STATIC FUNC(boolean, RTE_CODE) Idp_ReadDIDFromInfoTable\n                  (P2CONST(t_AdminTable, AUTOMATIC, RTE_APPL_DATA) pAdminTable, uint16 DID_id,\n                  P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) DID_data, uint16 DID_size)\n * \\brief   This  function copies DID data from the AdminTable.\n * \\param   [in]  pAdminTable: AdminTable start address\n * \\param   [in]  DID_id: DID which want to read from the Info Table\n * \\param   [out] DID_data: DID data buffer\n * \\param   [in]  DID_size:  DID data size\n * \\retval  TRUE  Copy of the wanted DID is successfull\n * \\retval  FALSE Copy of the wanted DID is not successfull\n */\n/*****************************************************************************/\n/*! \\misra PRQA 3432 "Macro expansion does not result in expression\nand according to the Coding Guideline rule 4.6 AUTOSAR Compiler Abstraction should be used" */', start_line_num=340, end_line_num=355, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 3432 */', start_line_num=358, end_line_num=358, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 2981: variable initialization recommended by Coding Guideline Rule 4.14 */', start_line_num=360, end_line_num=360, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 2981 */\n/*! \\misra PRQA 2981: variable initialization recommended by Coding Guideline Rule 4.14 */', start_line_num=361, end_line_num=362, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 2981 */\n/*! \\misra PRQA 2981: variable initialization recommended by Coding Guideline Rule 4.14 */', start_line_num=363, end_line_num=364, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 2981 */\n/*! \\misra PRQA 2981: variable initialization recommended by Coding Guideline Rule 4.14 */', start_line_num=365, end_line_num=366, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 2981 */', start_line_num=367, end_line_num=367, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* QAC: After the cast and array subscript operator the "chkprg_is_valid_rom_addr" function */\n/* checks that it is pointing to valid memory space.                                        */', start_line_num=369, end_line_num=370, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* Check that the start address is pointing to valid memory space. */', start_line_num=372, end_line_num=372, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* Search the DID witch want to read from the Info Table */', start_line_num=381, end_line_num=381, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 0491 "This array subscript operator is useable here" */', start_line_num=384, end_line_num=384, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0491 */', start_line_num=385, end_line_num=385, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*****************************************************************************/\n/*!\n * \\fn      LOCAL_INLINE FUNC(boolean, RTE_CODE) Idp_ReadOut_the_founded_DID\n                  (uint8 i, P2CONST(t_GenInfoTbl, AUTOMATIC, RTE_APPL_DATA) pInfoTable,\n                  P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) DID_data, uint16 DID_size)\n * \\brief   This function reads the founded DID from the AdminTable.\n * \\param   [in]  i: Index variable.\n * \\param   [in]  pInfoTable: AdminTable start address\n * \\param   [in]  DID_data: DID data buffer\n * \\param   [in]  DID_size:  DID data size\n * \\param   [out] pInfoTable: AdminTable start address\n * \\param   [out] DID_data: DID data buffer\n * \\param   [out] retStatus: The status of the function\'s execution\n * \\retval  TRUE  Read of the wanted DID is successfull\n * \\retval  FALSE Read of the wanted DID is not successfull\n */\n/*****************************************************************************/\n/*! \\misra PRQA 3432 "Macro expansion does not result in expression\nand according to the Coding Guideline rule 4.6 AUTOSAR Compiler Abstraction should be used" */', start_line_num=395, end_line_num=413, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 3432 */', start_line_num=416, end_line_num=416, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 2981: variable initialization recommended by Coding Guideline Rule 4.14 */', start_line_num=418, end_line_num=418, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 2981 */', start_line_num=419, end_line_num=419, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 0306,0491 "This array subscript operator is useable here" */', start_line_num=422, end_line_num=422, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0306,0491 */', start_line_num=423, end_line_num=423, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* Check that the start address is a valid pointer in PFlash */', start_line_num=425, end_line_num=425, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* copy data into the result buffer */\n/*! \\misra PRQA 0491 "This cast is useable here" */', start_line_num=428, end_line_num=429, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0491 */', start_line_num=430, end_line_num=430, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n         source and destination are the same type" */', start_line_num=432, end_line_num=433, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=434, end_line_num=434, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment="/*****************************************************************************/\n/*!\n * \\fn      LOCAL_INLINE FUNC(Std_ReturnType, RTE_CODE) Idp_F1A0_CheckFormat(const uint8 msg[], uint16 DataLength)\n * \\brief   This function checks the F1A0 DID data format\n *          [HIS] STVOC2 'Language scope 'VOCF' per function' is exceeded\n *          It is necessary to maintain a reasonable SW design, ensure the good behavior and optimal performace.\n * \\param   [in] msg: Array to hold teh DID value\n * \\param   [in] DataLength: Length of the data\n * \\return  Success of operation.\n * \\retval  RTE_E_OK - Format is OK\n * \\retval  E_NOT_OK - Format is NOK\n */\n/*****************************************************************************/", start_line_num=443, end_line_num=455, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 2981: variable initialization recommended by Coding Guideline Rule 4.14 */', start_line_num=458, end_line_num=458, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 2981 */', start_line_num=459, end_line_num=459, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 0771 "Improve the running speed" */', start_line_num=462, end_line_num=462, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*PRQA S 0771*/', start_line_num=463, end_line_num=463, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* Front number range check */', start_line_num=468, end_line_num=468, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* Middle and end group range check */', start_line_num=477, end_line_num=477, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* Part number suffix range check */', start_line_num=486, end_line_num=486, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* Supress QAC warning */', start_line_num=494, end_line_num=494, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*================== [definition of global functions] =======================*/\n/* PRQA S 1503 EOF */', start_line_num=501, end_line_num=502, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment="/* These functions are in use, called by the RTE. */\n/*****************************************************************************/\n/*!\n * \\fn      FUNC(Std_ReturnType,RTE_CODE) Idp_F187_VWSparePartNumber_ReadData\n *                                     (P2VAR(Dcm_DataF187_VWSparePartNumber_ArrayType, AUTOMATIC, RTE_APPL_DATA) Data)\n * \\brief   This function handles the F187 DID readability via UDS.\n * \\param   [in] Data: Variable what will be store the needed DID value\n * \\param   [out] Data: Variable what will be store the needed DID value\n * \\param   [out] retStatus: The status of the function's execution\n * \\return  Success of operation.\n * \\retval  E_OK - This value is always returned as defined in the AUTOSAR requirements.\n */\n/*****************************************************************************/\n/* VWMEB-Inv-303489 - Read Diagnostic Data */", start_line_num=502, end_line_num=515, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 3432  "This is generated by Tresos this way. Macro expansion does not result in expression where \noperator precedence could cause an issue, so the warning can be safely suppressed. Resolving by adding parentheses \nis not possible because it would result in compile error, and the SW cannot be built." */', start_line_num=520, end_line_num=522, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*PRQA S 3432*/', start_line_num=524, end_line_num=524, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* copy data into the result buffer */\n/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n      source and destination are the same type" */', start_line_num=530, end_line_num=532, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=533, end_line_num=533, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment="/*****************************************************************************/\n/*!\n * \\fn      FUNC(Std_ReturnType,RTE_CODE) Idp_F189_VWApplicationSoftwareVersionNumber_ReadData\n *                    (P2VAR(Dcm_DataF189_VWApplicationSoftwareVersionNumber_ArrayType, AUTOMATIC, RTE_APPL_DATA) Data)\n * \\brief   This function handles the F189 DID readability via UDS.\n * \\param   [in] Data: Variable what will be store the needed DID value\n * \\param   [out] Data: Variable what will be store the needed DID value\n * \\param   [out] retStatus: The status of the function's execution\n * \\return  Success of operation.\n * \\retval  E_OK - This value is always returned as defined in the AUTOSAR requirements.\n */\n/*****************************************************************************/\n/* VWMEB-Inv-303489 - Read Diagnostic Data */", start_line_num=539, end_line_num=551, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 3432  "This is generated by Tresos this way. Macro expansion does not result in expression where \noperator precedence could cause an issue, so the warning can be safely suppressed. Resolving by adding parentheses \nis not possible because it would result in compile error, and the SW cannot be built." */', start_line_num=556, end_line_num=558, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*PRQA S 3432*/', start_line_num=560, end_line_num=560, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* copy data into the result buffer */\n/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n      source and destination are the same type" */', start_line_num=566, end_line_num=568, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=569, end_line_num=569, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment="/*****************************************************************************/\n/*!\n * \\fn      FUNC(Std_ReturnType,RTE_CODE) Idp_F18C_ECUSerialNumber_ReadData\n *                                       (P2VAR(Dcm_DataF18C_ECUSerialNumber_ArrayType, AUTOMATIC, RTE_APPL_DATA) Data)\n * \\brief   This function handles the F18C DID readability via UDS.\n * \\param   [in] Data: Variable what will be store the needed DID value\n * \\param   [out] Data: Variable what will be store the needed DID value\n * \\param   [out] retStatus: The status of the function's execution\n * \\return  Success of operation.\n * \\retval  E_OK - This value is always returned as defined in the AUTOSAR requirements.\n */\n/*****************************************************************************/\n/* VWMEB-Inv-303489 - Read Diagnostic Data */", start_line_num=576, end_line_num=588, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 3432  "This is generated by Tresos this way. Macro expansion does not result in expression where \noperator precedence could cause an issue, so the warning can be safely suppressed. Resolving by adding parentheses \nis not possible because it would result in compile error, and the SW cannot be built." */', start_line_num=593, end_line_num=595, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*PRQA S 3432*/', start_line_num=597, end_line_num=597, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* copy data into the result buffer */\n/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n      source and destination are the same type" */', start_line_num=603, end_line_num=605, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=606, end_line_num=606, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment="/*****************************************************************************/\n/*!\n * \\fn      FUNC(Std_ReturnType,RTE_CODE) Idp_F191_ECUHardwareNumber_ReadData\n *                                     (P2VAR(Dcm_DataF191_ECUHardwareNumber_ArrayType, AUTOMATIC, RTE_APPL_DATA) Data)\n * \\brief   This function handles the F191 DID readability via UDS.\n * \\param   [in] Data: Variable what will be store the needed DID value\n * \\param   [out] Data: Variable what will be store the needed DID value\n * \\param   [out] retStatus: The status of the function's execution\n * \\return  Success of operation.\n * \\retval  E_OK - This value is always returned as defined in the AUTOSAR requirements.\n */\n/*****************************************************************************/\n/* VWMEB-Inv-303489 - Read Diagnostic Data */", start_line_num=613, end_line_num=625, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 3432  "This is generated by Tresos this way. Macro expansion does not result in expression where \noperator precedence could cause an issue, so the warning can be safely suppressed. Resolving by adding parentheses \nis not possible because it would result in compile error, and the SW cannot be built." */', start_line_num=630, end_line_num=632, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*PRQA S 3432*/', start_line_num=634, end_line_num=634, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* copy data into the result buffer */\n/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n      source and destination are the same type" */', start_line_num=640, end_line_num=642, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=643, end_line_num=643, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment="/*****************************************************************************/\n/*!\n * \\fn      FUNC(Std_ReturnType,RTE_CODE) Idp_F192_SystemSupplierECUHardwareNumber_ReadData\n *                       (P2VAR(Dcm_DataF192_SystemSupplierECUHardwareNumber_ArrayType, AUTOMATIC, RTE_APPL_DATA) Data)\n * \\brief   This function handles the F192 DID readability via UDS.\n * \\param   [in] Data: Variable what will be store the needed DID value\n * \\param   [out] Data: Variable what will be store the needed DID value\n * \\param   [out] retStatus: The status of the function's execution\n * \\return  Success of operation.\n * \\retval  E_OK - This value is always returned as defined in the AUTOSAR requirements.\n */\n/*****************************************************************************/\n/* VWMEB-Inv-303489 - Read Diagnostic Data */", start_line_num=651, end_line_num=663, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 3432  "This is generated by Tresos this way. Macro expansion does not result in expression where \noperator precedence could cause an issue, so the warning can be safely suppressed. Resolving by adding parentheses \nis not possible because it would result in compile error, and the SW cannot be built." */', start_line_num=668, end_line_num=670, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*PRQA S 3432*/', start_line_num=672, end_line_num=672, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* copy data into the result buffer */\n/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n      source and destination are the same type" */', start_line_num=678, end_line_num=680, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=681, end_line_num=681, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment="/*****************************************************************************/\n/*!\n * \\fn      FUNC(Std_ReturnType,RTE_CODE) Idp_F194_SystemSupplierECUSoftwareNumber_ReadData\n *                       (P2VAR(Dcm_DataF194_SystemSupplierECUSoftwareNumber_ArrayType, AUTOMATIC, RTE_APPL_DATA) Data)\n * \\brief   This function handles the F194 DID readability via UDS.\n * \\param   [in] Data: Variable what will be store the needed DID value\n * \\param   [out] Data: Variable what will be store the needed DID value\n * \\param   [out] retStatus: The status of the function's execution\n * \\return  Success of operation.\n * \\retval  E_OK - This value is always returned as defined in the AUTOSAR requirements.\n */\n/*****************************************************************************/\n/* VWMEB-Inv-303489 - Read Diagnostic Data */", start_line_num=687, end_line_num=699, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 3432  "This is generated by Tresos this way. Macro expansion does not result in expression where \noperator precedence could cause an issue, so the warning can be safely suppressed. Resolving by adding parentheses \nis not possible because it would result in compile error, and the SW cannot be built." */', start_line_num=704, end_line_num=706, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*PRQA S 3432*/', start_line_num=708, end_line_num=708, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* copy data into the result buffer */\n/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n      source and destination are the same type" */', start_line_num=714, end_line_num=716, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=717, end_line_num=717, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment="/*****************************************************************************/\n/*!\n * \\fn      FUNC(Std_ReturnType,RTE_CODE) Idp_F195_SystemSupplierECUSoftwareVersionNumber_ReadData\n *                (P2VAR(Dcm_DataF195_SystemSupplierECUSoftwareVersionNumber_ArrayType, AUTOMATIC, RTE_APPL_DATA) Data)\n * \\brief   This function handles the F194 DID readability via UDS.\n * \\param   [in] Data: Variable what will be store the needed DID value\n * \\param   [out] Data: Variable what will be store the needed DID value\n * \\param   [out] retStatus: The status of the function's execution\n * \\return  Success of operation.\n * \\retval  E_OK - This value is always returned as defined in the AUTOSAR requirements.\n */\n/*****************************************************************************/\n/* VWMEB-Inv-303489 - Read Diagnostic Data */", start_line_num=722, end_line_num=734, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 3432  "This is generated by Tresos this way. Macro expansion does not result in expression where \noperator precedence could cause an issue, so the warning can be safely suppressed. Resolving by adding parentheses \nis not possible because it would result in compile error, and the SW cannot be built." */', start_line_num=739, end_line_num=741, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*PRQA S 3432*/', start_line_num=743, end_line_num=743, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* copy data into the result buffer */\n/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n      source and destination are the same type" */', start_line_num=749, end_line_num=751, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=752, end_line_num=752, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*****************************************************************************/\n/*!\n * \\fn      FUNC(Std_ReturnType, RTE_CODE) Idp_F19E_AsamOdxFileIdentifier_ReadDataLength\n *                                                                  (P2VAR(uint16, AUTOMATIC, RTE_APPL_DATA) DidLength)\n * \\brief   This function set the F19E DID length.\n * \\param   [in] DidLength: Variable what will be store the DID length.\n * \\param   [out] DidLength: Variable what will be store the DID length.\n * \\param   [out] retStatus: The status of the function\'s execution\n * \\return  Success of operation.\n * \\retval  E_OK - This value is always returned as defined in the AUTOSAR requirements.\n */\n/*****************************************************************************/\n/*! \\misra PRQA 3432  "This is generated by Tresos this way. Macro expansion does not result in expression where \noperator precedence could cause an issue, so the warning can be safely suppressed. Resolving by adding parentheses \nis not possible because it would result in compile error, and the SW cannot be built." */', start_line_num=758, end_line_num=772, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*PRQA S 3432*/', start_line_num=774, end_line_num=774, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 2981: variable initialization recommended by Coding Guideline Rule 4.14 */', start_line_num=776, end_line_num=776, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 2981 */', start_line_num=777, end_line_num=777, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* Search the first NULL byte */', start_line_num=783, end_line_num=783, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* Save the first NULL byte position. */', start_line_num=788, end_line_num=788, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* If the NULL byte is not exist, than the size of the DID is 25 byte (init value) due to Q-LAH_80125_T2-7: */\n/* For the case that this DataIdentifier is calibrated with 25 bytes, it must not be terminated by 0x00 */', start_line_num=797, end_line_num=798, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment="/*****************************************************************************/\n/*!\n * \\fn      FUNC(Std_ReturnType, RTE_CODE) Idp_F19E_AsamOdxFileIdentifier_ReadData\n *                                                                        (P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data)\n * \\brief   This function handles the F19E DID readability via UDS.\n * \\param   [in] Data: Variable what will be store the needed DID value\n * \\param   [out] Data: Variable what will be store the needed DID value\n * \\param   [out] retStatus: The status of the function's execution\n * \\return  Success of operation.\n * \\retval  E_OK - This value is always returned as defined in the AUTOSAR requirements.\n */\n/*****************************************************************************/\n/* VWMEB-Inv-303489 - Read Diagnostic Data */", start_line_num=806, end_line_num=818, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 3432  "This is generated by Tresos this way. Macro expansion does not result in expression where \noperator precedence could cause an issue, so the warning can be safely suppressed. Resolving by adding parentheses \nis not possible because it would result in compile error, and the SW cannot be built." */', start_line_num=823, end_line_num=825, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*PRQA S 3432*/', start_line_num=827, end_line_num=827, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 2981: variable initialization recommended by Coding Guideline Rule 4.14 */', start_line_num=830, end_line_num=830, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 2981 */', start_line_num=831, end_line_num=831, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* Search the first NULL byte */', start_line_num=837, end_line_num=837, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* Save the first NULL byte position. */', start_line_num=842, end_line_num=842, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* If the NULL byte is not exist, than the size of the DID is 25 byte (init value) due to Q-LAH_80125_T2-7: */\n/* For the case that this DataIdentifier is calibrated with 25 bytes, it must not be terminated by 0x00 */\n/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n      source and destination are the same type" */', start_line_num=851, end_line_num=854, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=855, end_line_num=855, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment="/*****************************************************************************/\n/*!\n * \\fn      FUNC(Std_ReturnType, RTE_CODE) Idp_F1A2_AsamOdxFileVersion_ReadData\n *                                                                        (P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data)\n * \\brief   This function handles the F1A2 DID readability via UDS.\n * \\param   [in] Data: Variable what will be store the needed DID value\n * \\param   [out] Data: Variable what will be store the needed DID value\n * \\param   [out] retStatus: The status of the function's execution\n * \\return  Success of operation.\n * \\retval  E_OK - This value is always returned as defined in the AUTOSAR requirements.\n */\n/*****************************************************************************/\n/* VWMEB-Inv-303489 - Read Diagnostic Data */", start_line_num=861, end_line_num=873, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 3432  "This is generated by Tresos this way. Macro expansion does not result in expression where \noperator precedence could cause an issue, so the warning can be safely suppressed. Resolving by adding parentheses \nis not possible because it would result in compile error, and the SW cannot be built." */', start_line_num=878, end_line_num=880, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*PRQA S 3432*/', start_line_num=882, end_line_num=882, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* copy data into the result buffer */\n/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n      source and destination are the same type" */', start_line_num=888, end_line_num=890, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=891, end_line_num=891, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment="/*****************************************************************************/\n/*!\n * \\fn      FUNC(Std_ReturnType, RTE_CODE) Idp_F1A3_VWECUHardwareVersionNumber_ReadData\n *                            (P2VAR(Dcm_DataF1A3_VWECUHardwareVersionNumber_ArrayType, AUTOMATIC, RTE_APPL_DATA) Data)\n * \\brief   This function handles the F1A3 DID readability via UDS.\n * \\param   [in] Data: Variable what will be store the needed DID value\n * \\param   [out] Data: Variable what will be store the needed DID value\n * \\param   [out] retStatus: The status of the function's execution\n * \\return  Success of operation.\n * \\retval  E_OK - This value is always returned as defined in the AUTOSAR requirements.\n */\n/*****************************************************************************/\n/* VWMEB-Inv-303489 - Read Diagnostic Data */", start_line_num=897, end_line_num=909, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 3432  "This is generated by Tresos this way. Macro expansion does not result in expression where \noperator precedence could cause an issue, so the warning can be safely suppressed. Resolving by adding parentheses \nis not possible because it would result in compile error, and the SW cannot be built." */', start_line_num=914, end_line_num=916, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*PRQA S 3432*/', start_line_num=918, end_line_num=918, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 2981: variable initialization recommended by Coding Guideline Rule 4.14 */', start_line_num=921, end_line_num=921, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 2981 */', start_line_num=922, end_line_num=922, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* copy data into the result buffer */\n/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n      source and destination are the same type" */', start_line_num=927, end_line_num=929, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=930, end_line_num=930, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* Overwrite the Life cyle byte (first byte) */', start_line_num=934, end_line_num=934, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* Set the first byte to "series" */\n/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n         source and destination are the same type" */', start_line_num=939, end_line_num=941, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=942, end_line_num=942, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* Set the first byte to "sample" */\n/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n         source and destination are the same type" */', start_line_num=948, end_line_num=950, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=951, end_line_num=951, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* Do nothing, the production data information will be used. */', start_line_num=955, end_line_num=955, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*****************************************************************************/\n/*!\n * \\fn      FUNC(Std_ReturnType, RTE_CODE) Idp_F1AD_EngineCodeLetters_ReadData\n *                      (P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data)\n * \\brief   This function handles the F1AD DID readability via UDS.\n * \\param   [in] Data: Variable what will be store the needed DID value\n * \\param   [out] Data: Variable what will be store the needed DID value\n * \\param   [out] retStatus: The status of the function\'s execution\n * \\return  Success of operation.\n * \\retval  E_OK - This value is always returned as defined in the AUTOSAR requirements.\n */\n/*****************************************************************************/\n/*! \\misra PRQA 3432  "This is generated by Tresos this way. Macro expansion does not result in expression where\noperator precedence could cause an issue, so the warning can be safely suppressed. Resolving by adding parentheses\nis not possible because it would result in compile error, and the SW cannot be built." */', start_line_num=963, end_line_num=977, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*PRQA S 3432*/', start_line_num=979, end_line_num=979, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* copy data into the result buffer */\n/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n      source and destination are the same type" */', start_line_num=984, end_line_num=986, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=987, end_line_num=987, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment="/*****************************************************************************/\n/*!\n * \\fn      FUNC(Std_ReturnType, RTE_CODE) Idp_F1B4_Technical_specifications_version_ReadData\n *                      (P2VAR(Dcm_DataF1B4_Technical_specifications_version_ArrayType, AUTOMATIC, RTE_APPL_DATA) Data)\n * \\brief   This function handles the F1B4 DID readability via UDS.\n * \\param   [in] Data: Variable what will be store the needed DID value\n * \\param   [out] Data: Variable what will be store the needed DID value\n * \\param   [out] retStatus: The status of the function's execution\n * \\return  Success of operation.\n * \\retval  E_OK - This value is always returned as defined in the AUTOSAR requirements.\n */\n/*****************************************************************************/\n/* VWMEB-Inv-303489 - Read Diagnostic Data */", start_line_num=993, end_line_num=1005, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 3432 "Macro expansion does not result in expression\nand according to the Coding Guideline rule 4.6 AUTOSAR Compiler Abstraction should be used" */', start_line_num=1010, end_line_num=1011, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 3432 */', start_line_num=1013, end_line_num=1013, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* copy data into the result buffer */\n/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n      source and destination are the same type" */', start_line_num=1019, end_line_num=1021, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=1022, end_line_num=1022, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*****************************************************************************/\n/*!\n * \\fn      FUNC(Std_ReturnType, RTE_CODE) F1B8_VW_system_firmware_versions_ReadDataLength\n *                                                                  (P2VAR(uint16, AUTOMATIC, RTE_APPL_DATA) DidLength)\n * \\brief   This function set the F1B8 DID length.\n * \\param   [in] DidLength: Variable what will be store the DID length.\n * \\param   [out] DidLength: Variable what will be store the DID length.\n * \\param   [out] retStatus: The status of the function\'s execution\n * \\return  Success of operation.\n * \\retval  E_OK - This value is always returned as defined in the AUTOSAR requirements.\n */\n/*****************************************************************************/\n/*! \\misra PRQA 3432 "Macro expansion does not result in expression\nand according to the Coding Guideline rule 4.6 AUTOSAR Compiler Abstraction should be used" */\n/*! \\misra PRQA 3206 "The function prototype is generated by Tresos, which includes also not used arguments." */', start_line_num=1028, end_line_num=1042, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 3432 */', start_line_num=1044, end_line_num=1044, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 3206 */', start_line_num=1044, end_line_num=1044, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*****************************************************************************/\n/*!\n * \\fn      FUNC(Std_ReturnType, RTE_CODE) Idp_F1B8_VW_system_firmware_versions_ReadData\n *                           (P2VAR(Dcm_DataF1B8_VW_system_firmware_versions_ArrayType, AUTOMATIC, RTE_APPL_DATA) Data)\n * \\brief   This function handles the F1B8 DID readability via UDS.\n *          [HIS] STVOC2 \'Language scope \'VOCF\' per function\' is exceeded\n *          It is necessary to maintain a reasonable SW design, ensure the good behavior and optimal performace.\n * \\param   [in] Data: Variable what will be store the needed DID value\n * \\param   [out] Data: Variable what will be store the needed DID value\n * \\param   [out] retStatus: The status of the function\'s execution\n * \\return  Success of operation.\n * \\retval  E_OK - This value is always returned as defined in the AUTOSAR requirements.\n */\n/*****************************************************************************/\n/* VWMEB-Inv-303489 - Read Diagnostic Data */\n/*! \\misra PRQA 3432 "Macro expansion does not result in expression\nand according to the Coding Guideline rule 4.6 AUTOSAR Compiler Abstraction should be used" */', start_line_num=1060, end_line_num=1076, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 3432 */', start_line_num=1078, end_line_num=1078, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* suppress unused argument warning */', start_line_num=1084, end_line_num=1084, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* Read Firmware versions of SiemensBoot (if present), BootManager, and HSM */', start_line_num=1094, end_line_num=1094, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* First byte is the number of firmware modules */\n/*! \\misra PRQA 0489 "This pointer arithmetic is permitted and needed" */', start_line_num=1096, end_line_num=1097, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0489 */', start_line_num=1098, end_line_num=1098, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* Siemens bootloader is optional module,set output bytes only if this is available */\n/*! \\misra PRQA 0488 "This pointer arithmetic is permitted and needed" */', start_line_num=1102, end_line_num=1103, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0488 */\n/*! \\misra PRQA 0488 "This operation is needed." */', start_line_num=1104, end_line_num=1105, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 2984 */', start_line_num=1106, end_line_num=1106, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* Always write BM version bytes, default value is used if not available */', start_line_num=1109, end_line_num=1109, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 0488 "This pointer arithmetic is permitted and needed" */', start_line_num=1112, end_line_num=1112, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0488 */', start_line_num=1113, end_line_num=1113, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* Always write HSM version bytes, default value is used if not available */', start_line_num=1116, end_line_num=1116, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 0488 "This pointer arithmetic is permitted and needed" */', start_line_num=1119, end_line_num=1119, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0488 */', start_line_num=1120, end_line_num=1120, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* format ADIS BM version */\n/*! \\misra PRQA 0491 "Array subscripting on pointer is necessary due to the given AutoSAR interface." */', start_line_num=1123, end_line_num=1124, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0491 */\n/*! \\misra PRQA 0491 "Array subscripting on pointer is necessary due to the given AutoSAR interface." */', start_line_num=1125, end_line_num=1126, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0491 */\n/*! \\misra PRQA 0491 "Array subscripting on pointer is necessary due to the given AutoSAR interface." */', start_line_num=1127, end_line_num=1128, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0491 */\n/*! \\misra PRQA 0491 "Array subscripting on pointer is necessary due to the given AutoSAR interface." */', start_line_num=1129, end_line_num=1130, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0491 */\n/*! \\misra PRQA 0488 "This pointer arithmetic is permitted and needed" */', start_line_num=1131, end_line_num=1132, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0488 */', start_line_num=1133, end_line_num=1133, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* format ADIS BL version */\n/*! \\misra PRQA 0491 "Array subscripting on pointer is necessary due to the given AutoSAR interface." */', start_line_num=1136, end_line_num=1137, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0491 */\n/*! \\misra PRQA 0491 "Array subscripting on pointer is necessary due to the given AutoSAR interface." */', start_line_num=1138, end_line_num=1139, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0491 */\n/*! \\misra PRQA 0491 "Array subscripting on pointer is necessary due to the given AutoSAR interface." */', start_line_num=1140, end_line_num=1141, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0491 */\n/*! \\misra PRQA 0491 "Array subscripting on pointer is necessary due to the given AutoSAR interface." */', start_line_num=1142, end_line_num=1143, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0491 */\n/*! \\misra PRQA 0491 "Array subscripting on pointer is necessary due to the given AutoSAR interface." */', start_line_num=1144, end_line_num=1145, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* Now we know the number of firmware modules, update first byte */', start_line_num=1148, end_line_num=1148, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment="/*****************************************************************************/\n/*!\n * \\fn      FUNC(Std_ReturnType, RTE_CODE) Idp_F1DF_ECUProgrammingInformation_ReadData\n *                             (P2VAR(Dcm_DataF1DF_ECUProgrammingInformation_ArrayType, AUTOMATIC, RTE_APPL_DATA) Data)\n * \\brief   This function handles the F1DF DID readability via UDS.\n * \\param   [in] Data: Variable what will be store the needed DID value\n * \\param   [out] Data: Variable what will be store the needed DID value\n * \\param   [out] retStatus: The status of the function's execution\n * \\return  Success of operation.\n * \\retval  E_OK - This value is always returned as defined in the AUTOSAR requirements.\n */\n/*****************************************************************************/\n/* VWMEB-Inv-303489 - Read Diagnostic Data */", start_line_num=1156, end_line_num=1168, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 3432 "Macro expansion does not result in expression\nand according to the Coding Guideline rule 4.6 AUTOSAR Compiler Abstraction should be used" */', start_line_num=1173, end_line_num=1174, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 3432 */', start_line_num=1176, end_line_num=1176, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n      source and destination are the same type" */', start_line_num=1183, end_line_num=1184, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=1185, end_line_num=1185, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment="/*****************************************************************************/\n/*!\n * \\fn      FUNC(Std_ReturnType, RTE_CODE) Idp_F197_VWSystemNameOrEngineType_ReadData\n *                              (P2VAR(Dcm_DataF197_VWSystemNameOrEngineType_ArrayType, AUTOMATIC, RTE_APPL_DATA) Data)\n * \\brief   This function handles the F197 DID readability via UDS.\n * \\param   [in] Data: Variable what will be store the needed DID value\n * \\param   [out] Data: Variable what will be store the needed DID value\n * \\param   [out] retStatus: The status of the function's execution\n * \\return  Success of operation.\n * \\retval  E_OK - This value is always returned as defined in the AUTOSAR requirements.\n */\n/*****************************************************************************/\n/* VWMEB-Inv-303489 - Read Diagnostic Data */", start_line_num=1191, end_line_num=1203, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 3432 "Macro expansion does not result in expression\nand according to the Coding Guideline rule 4.6 AUTOSAR Compiler Abstraction should be used" */', start_line_num=1208, end_line_num=1209, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 3432 */', start_line_num=1211, end_line_num=1211, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* copy data into the result buffer */\n/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n      source and destination are the same type" */', start_line_num=1216, end_line_num=1218, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=1219, end_line_num=1219, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment="/*****************************************************************************/\n/*!\n * \\fn      FUNC(Std_ReturnType, RTE_CODE) Idp_x0407_VWLogicalSoftwareBlockCounterOfProgrammingAttempts_ReadData\n *          (P2VAR(Dcm_Datax0407_VWLogicalSoftwareBlockCounterOfProgrammingAttempts_ArrayType,\n *          AUTOMATIC, RTE_APPL_DATA) Data)\n * \\brief   This function handles the 0407 DID readability via UDS.\n * \\param   [in] Data: Variable what will be store the needed DID value\n * \\param   [out] Data: Variable what will be store the needed DID value\n * \\param   [out] retStatus: The status of the function's execution\n * \\return  Success of operation.\n * \\retval  E_OK - This value is always returned as defined in the AUTOSAR requirements.\n */\n/*****************************************************************************/\n/* VWMEB-Inv-303489 - Read Diagnostic Data */", start_line_num=1225, end_line_num=1238, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 3432 "Macro expansion does not result in expression\nand according to the Coding Guideline rule 4.6 AUTOSAR Compiler Abstraction should be used" */', start_line_num=1243, end_line_num=1244, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 3432 */', start_line_num=1246, end_line_num=1246, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* DownGradeProtection incl. */', start_line_num=1256, end_line_num=1256, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* Byte order have to be swapped for the diagnostic response because\n           of the intel/motorola byte order conversion. */', start_line_num=1261, end_line_num=1262, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n          source and destination are the same type" */', start_line_num=1263, end_line_num=1264, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=1265, end_line_num=1265, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* copy data into the result buffer */\n/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n      source and destination are the same type" */', start_line_num=1267, end_line_num=1269, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=1270, end_line_num=1270, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment="/*****************************************************************************/\n/*!\n * \\fn      FUNC(Std_ReturnType, RTE_CODE) Idp_x040F_VWLogicalSoftwareBlockLockValue_ReadData\n *                      (P2VAR(Dcm_Datax040F_VWLogicalSoftwareBlockLockValue_ArrayType, AUTOMATIC, RTE_APPL_DATA) Data)\n * \\brief   This function handles the 040F DID readability via UDS.\n * \\param   [in] Data: Variable what will be store the needed DID value\n * \\param   [out] Data: Variable what will be store the needed DID value\n * \\param   [out] retStatus: The status of the function's execution\n * \\return  Success of operation.\n * \\retval  E_OK - This value is always returned as defined in the AUTOSAR requirements.\n */\n/*****************************************************************************/\n/* VWMEB-Inv-303489 - Read Diagnostic Data */", start_line_num=1277, end_line_num=1289, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 3432 "Macro expansion does not result in expression\nand according to the Coding Guideline rule 4.6 AUTOSAR Compiler Abstraction should be used" */', start_line_num=1294, end_line_num=1295, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 3432 */', start_line_num=1297, end_line_num=1297, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* DownGradeProtection incl. */', start_line_num=1305, end_line_num=1305, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* Check if NvM block is empty */', start_line_num=1310, end_line_num=1310, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* Byte order have to be swapped for the diagnostic response because\n            of the intel/motorola byte order conversion. */', start_line_num=1317, end_line_num=1318, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n            source and destination are the same type" */', start_line_num=1319, end_line_num=1320, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=1321, end_line_num=1321, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* copy data into the result buffer */', start_line_num=1324, end_line_num=1324, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* Common NvM block is empty, use default data */\n/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n         source and destination are the same type" */', start_line_num=1327, end_line_num=1329, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=1330, end_line_num=1330, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n         source and destination are the same type" */', start_line_num=1335, end_line_num=1336, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=1337, end_line_num=1337, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment="/*****************************************************************************/\n/*!\n * \\fn      FUNC(Std_ReturnType, RTE_CODE) Idp_x0410_BootloaderTPBlocksize_ReadData\n *                                (P2VAR(Dcm_Datax0410_BootloaderTPBlocksize_ArrayType, AUTOMATIC, RTE_APPL_DATA) Data)\n * \\brief   This function handles the 0410 DID readability via UDS.\n * \\param   [in] Data: Variable what will be store the needed DID value\n * \\param   [out] Data: Variable what will be store the needed DID value\n * \\param   [out] retStatus: The status of the function's execution\n * \\return  Success of operation.\n * \\retval  E_OK - This value is always returned as defined in the AUTOSAR requirements.\n */\n/*****************************************************************************/\n/* VWMEB-Inv-303489 - Read Diagnostic Data */", start_line_num=1345, end_line_num=1357, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 3432 "Macro expansion does not result in expression\nand according to the Coding Guideline rule 4.6 AUTOSAR Compiler Abstraction should be used" */', start_line_num=1362, end_line_num=1363, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 3432 */', start_line_num=1365, end_line_num=1365, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* copy data into the result buffer */\n/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n      source and destination are the same type" */', start_line_num=1371, end_line_num=1373, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=1374, end_line_num=1374, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment="/*****************************************************************************/\n/*!\n * \\fn      FUNC(Std_ReturnType, RTE_CODE) Idp_F15B_FingerprintAndProgrammingDateOfLogicalSoftwareBlocks_ReadData\n *          (P2VAR(Dcm_DataF15B_FingerprintAndProgrammingDateOfLogicalSoftwareBlocks_ArrayType,\n *          AUTOMATIC, RTE_APPL_DATA) Data)\n * \\brief   This function handles the F15B DID readability via UDS.\n * \\param   [in] Data: Variable what will be store the needed DID value\n * \\param   [out] Data: Variable what will be store the needed DID value\n * \\param   [out] retStatus: The status of the function's execution\n * \\return  Success of operation.\n * \\retval  E_OK - This value is always returned as defined in the AUTOSAR requirements.\n */\n/*****************************************************************************/\n/* VWMEB-Inv-303489 - Read Diagnostic Data */", start_line_num=1381, end_line_num=1394, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 3432 "Macro expansion does not result in expression\nand according to the Coding Guideline rule 4.6 AUTOSAR Compiler Abstraction should be used" */', start_line_num=1399, end_line_num=1400, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 3432 */', start_line_num=1402, end_line_num=1402, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* DownGradeProtection incl. */', start_line_num=1409, end_line_num=1409, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n         source and destination are the same type" */', start_line_num=1412, end_line_num=1413, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=1414, end_line_num=1414, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n         source and destination are the same type" */', start_line_num=1418, end_line_num=1419, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=1420, end_line_num=1420, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n         source and destination are the same type" */', start_line_num=1424, end_line_num=1425, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=1426, end_line_num=1426, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* copy data into the result buffer */\n/* The array operand is needed for the correct data handling */\n/*! \\misra PRQA 0492 "The array operand is needed for the correct data handling" */\n/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n         source and destination are the same type" */', start_line_num=1433, end_line_num=1437, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0492 */', start_line_num=1438, end_line_num=1438, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=1438, end_line_num=1438, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment="/*****************************************************************************/\n/*!\n * \\fn      FUNC(Std_ReturnType, RTE_CODE) Idp_F18A_SystemSupplierIdentifier_ReadData\n *                              (P2VAR(Dcm_DataF18A_SystemSupplierIdentifier_ArrayType, AUTOMATIC, RTE_APPL_DATA) Data)\n * \\brief   This function handles the F18A DID readability via UDS.\n * \\param   [in] Data: Variable what will be store the needed DID value\n * \\param   [out] Data: Variable what will be store the needed DID value\n * \\param   [out] retStatus: The status of the function's execution\n * \\return  Success of operation.\n * \\retval  E_OK - This value is always returned as defined in the AUTOSAR requirements.\n */\n/*****************************************************************************/\n/* VWMEB-Inv-303489 - Read Diagnostic Data */", start_line_num=1448, end_line_num=1460, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 3432 "Macro expansion does not result in expression\nand according to the Coding Guideline rule 4.6 AUTOSAR Compiler Abstraction should be used" */', start_line_num=1465, end_line_num=1466, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 3432 */', start_line_num=1468, end_line_num=1468, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* copy data into the result buffer */\n/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n      source and destination are the same type" */', start_line_num=1473, end_line_num=1475, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=1476, end_line_num=1476, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*****************************************************************************/\n/*!\n * \\fn      FUNC(Std_ReturnType, RTE_CODE) Idp_F1A0_VWDataSetNumberOrECUDataContainerNumber_ReadData\n *                                                                        (P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data)\n * \\brief   This function handles the F1A0 DID readability via UDS.\n * \\param   [in] Data: Variable what will be store the needed DID value\n * \\param   [out] Data: Variable what will be store the needed DID value\n * \\param   [out] retStatus: The status of the function\'s execution\n * \\return  Success of operation.\n * \\retval  E_OK - This value is always returned as defined in the AUTOSAR requirements.\n */\n/*****************************************************************************/\n/* VWMEB-Inv-303489 - Read Diagnostic Data */\n/*! \\misra PRQA 3432 "Macro expansion does not result in expression\nand according to the Coding Guideline rule 4.6 AUTOSAR Compiler Abstraction should be used" */', start_line_num=1482, end_line_num=1496, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 3432 */', start_line_num=1498, end_line_num=1498, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n     source and destination are the same type" */', start_line_num=1502, end_line_num=1503, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=1504, end_line_num=1504, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*****************************************************************************/\n/*!\n * \\fn      FUNC(Std_ReturnType, RTE_CODE) Idp_F1A0_VWDataSetNumberOrECUDataContainerNumber_WriteData\n            (P2CONST(uint8, AUTOMATIC, RTE_APPL_DATA) Data, uint16 DataLength,\n            P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode)\n * \\brief   This function handles the F1A0 DID writing via UDS.\n * \\param   [in] Data: Variable what will be store the needed DID value\n * \\param   [in] ErrorCode: Variable what will be store the ErrorCode if the writing fail\n * \\param   [out] Data: Variable what will be store the needed DID value\n * \\param   [out] retStatus: The status of the function\'s execution\n * \\return  Success of operation.\n */\n/*****************************************************************************/\n/*! \\misra PRQA 3432 "Macro expansion does not result in expression\nand according to the Coding Guideline rule 4.6 AUTOSAR Compiler Abstraction should be used" */', start_line_num=1511, end_line_num=1525, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 3432 */', start_line_num=1528, end_line_num=1528, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 2981: variable initialization recommended by Coding Guideline Rule 4.14 */', start_line_num=1530, end_line_num=1530, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 2981 */', start_line_num=1531, end_line_num=1531, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* Process the incoming Data, because only specific range numbers is acceptable. */\n/*! \\misra PRQA 4471 "Needed for data analyzing" */\n/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n     source and destination are the same type" */', start_line_num=1537, end_line_num=1540, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*PRQA S 4471*/', start_line_num=1541, end_line_num=1541, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=1541, end_line_num=1541, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* If the ranges are correct */', start_line_num=1545, end_line_num=1545, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* DataIdentifier filling in */', start_line_num=1547, end_line_num=1547, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n        source and destination are the same type" */', start_line_num=1552, end_line_num=1553, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=1554, end_line_num=1554, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*****************************************************************************/\n/*!\n * \\fn      FUNC(Std_ReturnType, RTE_CODE) Idp_F1A0_VWDataSetNumberOrECUDataContainerNumber_ReadDataLength\n *                                                                  (P2VAR(uint16, AUTOMATIC, RTE_APPL_DATA) DidLength)\n * \\brief   This function handles the F1A0 DID length readability via UDS.\n * \\param   [in] Data: Variable what will be store the needed DID length\n * \\param   [out] Data: Variable what will be store the needed DID length\n * \\param   [out] retStatus: The status of the function\'s execution\n * \\return  Success of operation.\n * \\retval  E_OK - This value is always returned as defined in the AUTOSAR requirements.\n */\n/*****************************************************************************/\n/*! \\misra PRQA 3432 "Macro expansion does not result in expression\nand according to the Coding Guideline rule 4.6 AUTOSAR Compiler Abstraction should be used" */', start_line_num=1572, end_line_num=1585, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 3432 */', start_line_num=1587, end_line_num=1587, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment="/*****************************************************************************/\n/*!\n * \\fn      FUNC(Std_ReturnType, RTE_CODE) Idp_F1AA_VWWorkshopSystemName_ReadData\n *                                  (P2VAR(Dcm_DataF1AA_VWWorkshopSystemName_ArrayType, AUTOMATIC, RTE_APPL_DATA) Data)\n * \\brief   This function handles the F1AA DID readability via UDS.\n * \\param   [in] Data: Variable what will be store the needed DID value\n * \\param   [out] Data: Variable what will be store the needed DID value\n * \\param   [out] retStatus: The status of the function's execution\n * \\return  Success of operation.\n * \\retval  E_OK - This value is always returned as defined in the AUTOSAR requirements.\n */\n/*****************************************************************************/\n/* VWMEB-Inv-303489 - Read Diagnostic Data */", start_line_num=1598, end_line_num=1610, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 3432 "Macro expansion does not result in expression\nand according to the Coding Guideline rule 4.6 AUTOSAR Compiler Abstraction should be used" */', start_line_num=1615, end_line_num=1616, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 3432 */', start_line_num=1618, end_line_num=1618, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* This is an ID added in hex for ascii according to req: Q-LAH_80125_T2-11*/', start_line_num=1622, end_line_num=1622, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* copy data into the result buffer */\n/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n      source and destination are the same type" */', start_line_num=1626, end_line_num=1628, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=1629, end_line_num=1629, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment="/*****************************************************************************/\n/*!\n * \\fn      FUNC(Std_ReturnType, RTE_CODE) Idp_F1AB_VWLogicalSoftwareBlockVersion_ReadData\n *                        (P2VAR(Dcm_DataF1AB_VW_LogicalSoftwareBlockVersion_ArrayType, AUTOMATIC, RTE_APPL_DATA) Data)\n * \\brief   This function handles the F1AB DID readability via UDS.\n * \\param   [in] Data: Variable what will be store the needed DID value\n * \\param   [out] Data: Variable what will be store the needed DID value\n * \\param   [out] retStatus: The status of the function's execution\n * \\return  Success of operation.\n * \\retval  E_OK - This value is always returned as defined in the AUTOSAR requirements.\n */\n/*****************************************************************************/\n/* VWMEB-Inv-303489 - Read Diagnostic Data */", start_line_num=1635, end_line_num=1647, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 3432 "Macro expansion does not result in expression\nand according to the Coding Guideline rule 4.6 AUTOSAR Compiler Abstraction should be used" */', start_line_num=1652, end_line_num=1653, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 3432 */', start_line_num=1655, end_line_num=1655, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* DownGradeProtection incl. */', start_line_num=1662, end_line_num=1662, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n         source and destination are the same type" */', start_line_num=1665, end_line_num=1666, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=1667, end_line_num=1667, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* copy data into the result buffer */\n/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n      source and destination are the same type" */', start_line_num=1671, end_line_num=1673, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=1674, end_line_num=1674, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment="/*****************************************************************************/\n/*!\n * \\fn      FUNC(Std_ReturnType, RTE_CODE) Idp_F1AF_AUTOSAR_standard_application_software_identification_ReadData\n *          (P2VAR(Dcm_DataF1AF_AUTOSAR_standard_application_software_identification_ArrayType,\n *          AUTOMATIC, RTE_APPL_DATA) Data)\n * \\brief   This function handles the F1AF DID readability via UDS.\n * \\param   [in] Data: Variable what will be store the needed DID value\n * \\param   [out] Data: Variable what will be store the needed DID value\n * \\param   [out] retStatus: The status of the function's execution\n * \\return  Success of operation.\n * \\retval  E_OK - This value is always returned as defined in the AUTOSAR requirements.\n */\n/*****************************************************************************/\n/* VWMEB-Inv-303489 - Read Diagnostic Data */", start_line_num=1681, end_line_num=1694, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 3432 "Macro expansion does not result in expression\nand according to the Coding Guideline rule 4.6 AUTOSAR Compiler Abstraction should be used" */', start_line_num=1699, end_line_num=1700, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 3432 */', start_line_num=1702, end_line_num=1702, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* convert little endian to big endian */\n/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n      source and destination are the same type" */', start_line_num=1716, end_line_num=1718, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */\n/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n      source and destination are the same type" */', start_line_num=1719, end_line_num=1721, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=1722, end_line_num=1722, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* Swap the moduleID with the vendorID, because the order of structure members is different from the */\n/* DID format: SSW-Modul ID (2 Byte) + Vendor-ID (2 Byte) + SSW-Version (3 Byte).                    */', start_line_num=1724, end_line_num=1725, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* copy data into the result buffer */\n/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n      source and destination are the same type" */', start_line_num=1730, end_line_num=1732, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=1733, end_line_num=1733, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment="/*****************************************************************************/\n/*!\n * \\fn      FUNC(Std_ReturnType, RTE_CODE) Idp_F1B6_System_identification_ReadData\n *                                 (P2VAR(Dcm_DataF1B6_System_identification_ArrayType, AUTOMATIC, RTE_APPL_DATA) Data)\n * \\brief   This function handles the F1B6 DID readability via UDS.\n * \\param   [in] Data: Variable what will be store the needed DID value\n * \\param   [out] Data: Variable what will be store the needed DID value\n * \\param   [out] retStatus: The status of the function's execution\n * \\return  Success of operation.\n * \\retval  E_OK - This value is always returned as defined in the AUTOSAR requirements.\n */\n/*****************************************************************************/\n/* VWMEB-Inv-303489 - Read Diagnostic Data */", start_line_num=1739, end_line_num=1751, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 3432 "Macro expansion does not result in expression\nand according to the Coding Guideline rule 4.6 AUTOSAR Compiler Abstraction should be used" */', start_line_num=1756, end_line_num=1757, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 3432 */', start_line_num=1759, end_line_num=1759, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* copy data into the result buffer */\n/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n      source and destination are the same type" */', start_line_num=1764, end_line_num=1766, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=1767, end_line_num=1767, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment="/*****************************************************************************/\n/*!\n * \\fn      Std_ReturnType Idp_x0102_BasicSettingsStatus_ReadData\n *                                 (P2VAR(Dcm_DataF1B6_System_identification_ArrayType, AUTOMATIC, RTE_APPL_DATA) Data)\n * \\brief   This function handles the 0102 DID readability via UDS.\n * \\param   [in] None\n * \\param   [out] Data: Variable what will be store the needed DID value\n * \\param   [out] retStatus: The status of the function's execution\n * \\return  Success of operation.\n * \\retval  E_OK - This value is always returned as defined in the AUTOSAR requirements.\n */\n/*****************************************************************************/\n/* VWMEB-Inv-303489 - Read Diagnostic Data */", start_line_num=1773, end_line_num=1785, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 3432 "Macro expansion does not result in expression\nand according to the Coding Guideline rule 4.6 AUTOSAR Compiler Abstraction should be used" */', start_line_num=1790, end_line_num=1791, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 3432 */', start_line_num=1793, end_line_num=1793, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* copy data into the result buffer */\n/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n      source and destination are the same type" */', start_line_num=1798, end_line_num=1800, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=1801, end_line_num=1801, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment="/*****************************************************************************/\n/*!\n * \\fn      FUNC(Std_ReturnType, RTE_CODE) Idp_x0261_OBD_Driving_Cycle_set_once_ReadData\n *                           (P2VAR(Dcm_Datax0261_OBD_Driving_Cycle_set_once_ArrayType, AUTOMATIC, RTE_APPL_DATA) Data)\n * \\brief   This function handles the 0261 DID readability via UDS.\n * \\param   [in] Data: Variable what will be store the needed DID value\n * \\param   [out] Data: Variable what will be store the needed DID value\n * \\param   [out] retStatus: The status of the function's execution\n * \\return  Success of operation.\n * \\retval  E_OK - This value is always returned as defined in the AUTOSAR requirements.\n */\n/*****************************************************************************/\n/* VWMEB-Inv-303489 - Read Diagnostic Data */", start_line_num=1807, end_line_num=1819, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 3432 "Macro expansion does not result in expression\nand according to the Coding Guideline rule 4.6 AUTOSAR Compiler Abstraction should be used" */', start_line_num=1824, end_line_num=1825, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 3432 */', start_line_num=1827, end_line_num=1827, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* copy data into the result buffer */\n/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n      source and destination are the same type" */', start_line_num=1836, end_line_num=1838, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=1839, end_line_num=1839, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*****************************************************************************/\n/*!\n * \\fn      FUNC(Std_ReturnType, RTE_CODE) Idp_x02CA_Knockout_counter_ReadData\n *                                                                        (P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data)\n * \\brief   This function handles the 02CA DID readability via UDS.\n * \\param   [in] Data: Variable what will be store the needed DID value\n * \\param   [out] Data: Variable what will be store the needed DID value\n * \\param   [out] retStatus: The status of the function\'s execution\n * \\return  Success of operation.\n * \\retval  E_OK - This value is always returned as defined in the AUTOSAR requirements.\n */\n/*****************************************************************************/\n/* VWMEB-Inv-303489 - Read Diagnostic Data */\n/*! \\misra PRQA 3432 "Macro expansion does not result in expression\nand according to the Coding Guideline rule 4.6 AUTOSAR Compiler Abstraction should be used" */', start_line_num=1846, end_line_num=1860, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 3432 */', start_line_num=1862, end_line_num=1862, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n      source and destination are the same type" */', start_line_num=1870, end_line_num=1871, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=1872, end_line_num=1872, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*****************************************************************************/\n/*!\n * \\fn      FUNC(Std_ReturnType, RTE_CODE) Idp_x02CA_Knockout_counter_WriteData\n *          (P2CONST(uint8, AUTOMATIC, RTE_APPL_DATA) Data, P2VAR(Dcm_NegativeResponseCodeType,\n *          AUTOMATIC, RTE_APPL_DATA) ErrorCode)\n * \\brief   This function handles the 02CA DID writing via UDS.\n * \\param   [in] Data: Variable what will be store the needed DID value\n * \\param   [in] ErrorCode: Variable what will be store the ErrorCode if the writing fail\n * \\param   [out] Data: Variable what will be store the needed DID value\n * \\param   [out] retStatus: The status of the function\'s execution\n * \\retval  RTE_E_OK DID writing is successfull\n * \\retval  E_NOT_OK DID writing is not successfull\n */\n/*****************************************************************************/\n/*! \\misra PRQA 3432 "Macro expansion does not result in expression\nand according to the Coding Guideline rule 4.6 AUTOSAR Compiler Abstraction should be used" */', start_line_num=1878, end_line_num=1893, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 3432 */', start_line_num=1895, end_line_num=1895, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n      source and destination are the same type" */', start_line_num=1903, end_line_num=1904, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=1905, end_line_num=1905, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*****************************************************************************/\n/*!\n * \\fn      FUNC(Std_ReturnType, RTE_CODE) Idp_x02CB_Knockout_timer_ReadData\n *                                                                        (P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data)\n * \\brief   This function handles the 02CB DID readability via UDS.\n * \\param   [in] Data: Variable what will be store the needed DID value\n * \\param   [out] Data: Variable what will be store the needed DID value\n * \\param   [out] retStatus: The status of the function\'s execution\n * \\return  Success of operation.\n * \\retval  E_OK - This value is always returned as defined in the AUTOSAR requirements.\n */\n/*****************************************************************************/\n/* VWMEB-Inv-303489 - Read Diagnostic Data */\n/*! \\misra PRQA 3432 "Macro expansion does not result in expression\nand according to the Coding Guideline rule 4.6 AUTOSAR Compiler Abstraction should be used" */', start_line_num=1935, end_line_num=1949, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 3432 */', start_line_num=1951, end_line_num=1951, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* NVEM shall not be used according to [KO_911] */', start_line_num=1959, end_line_num=1959, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n      source and destination are the same type" */', start_line_num=1961, end_line_num=1962, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=1963, end_line_num=1963, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*****************************************************************************/\n/*!\n * \\fn      FUNC(Std_ReturnType, RTE_CODE) Idp_x02CB_Knockout_timer_WriteData\n *          (P2CONST(uint8, AUTOMATIC, RTE_APPL_DATA) Data, P2VAR(Dcm_NegativeResponseCodeType,\n *          AUTOMATIC, RTE_APPL_DATA) ErrorCode)\n * \\brief   This function handles the 02CB DID writing via UDS.\n * \\param   [in] Data: Variable what will be store the needed DID value\n * \\param   [in] ErrorCode: Variable what will be store the ErrorCode if the writing fail\n * \\param   [out] Data: Variable what will be store the needed DID value\n * \\param   [out] retStatus: The status of the function\'s execution\n * \\retval  RTE_E_OK DID writing is successfull\n * \\retval  E_NOT_OK DID writing is not successfull\n */\n/*****************************************************************************/\n/*! \\misra PRQA 3432 "Macro expansion does not result in expression\nand according to the Coding Guideline rule 4.6 AUTOSAR Compiler Abstraction should be used" */', start_line_num=1969, end_line_num=1984, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 3432 */', start_line_num=1986, end_line_num=1986, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 2981: variable initialization recommended by Coding Guideline Rule 4.14 */', start_line_num=1990, end_line_num=1990, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 2981 */\n/*! \\misra PRQA 2981: variable initialization recommended by Coding Guideline Rule 4.14 */', start_line_num=1991, end_line_num=1992, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 2981 */\n/*! \\misra PRQA 2981: variable initialization recommended by Coding Guideline Rule 4.14 */', start_line_num=1993, end_line_num=1994, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 2981 */', start_line_num=1995, end_line_num=1995, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n      source and destination are the same type" */', start_line_num=1999, end_line_num=2000, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=2001, end_line_num=2001, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* Timer set up shall be rejected if they are out of range */', start_line_num=2007, end_line_num=2007, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* NVEM shall be rejected if !0 is written [KO_915] */', start_line_num=2010, end_line_num=2010, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*****************************************************************************/\n/*!\n * \\fn      FUNC(Std_ReturnType, RTE_CODE) Idp_x09F3_KnockOut_test_mode_ReadData\n *                                                                        (P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data)\n * \\brief   This function handles the 09F3 DID readability via UDS.\n * \\param   [in] Data: Variable what will be store the needed DID value\n * \\param   [out] Data: Variable what will be store the needed DID value\n * \\param   [out] retStatus: The status of the function\'s execution\n * \\return  Success of operation.\n * \\retval  E_OK - This value is always returned as defined in the AUTOSAR requirements.\n */\n/*****************************************************************************/\n/* VWMEB-Inv-303489 - Read Diagnostic Data */\n/*! \\misra PRQA 3432 "Macro expansion does not result in expression\nand according to the Coding Guideline rule 4.6 AUTOSAR Compiler Abstraction should be used" */', start_line_num=2034, end_line_num=2048, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 3432 */', start_line_num=2050, end_line_num=2050, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n      source and destination are the same type" */', start_line_num=2054, end_line_num=2055, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=2056, end_line_num=2056, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*****************************************************************************/\n/*!\n * \\fn      FUNC(Std_ReturnType, RTE_CODE) Idp_x09F3_KnockOut_test_mode_WriteData\n *          (P2CONST(uint8, AUTOMATIC, RTE_APPL_DATA) Data, P2VAR(Dcm_NegativeResponseCodeType,\n *          AUTOMATIC, RTE_APPL_DATA) ErrorCode)\n * \\brief   This function handles the 09F3 DID writing via UDS.\n * \\param   [in] Data: Variable what will be store the needed DID value\n * \\param   [in] ErrorCode: Variable what will be store the ErrorCode if the writing fail\n * \\param   [out] Data: Variable what will be store the needed DID value\n * \\param   [out] retStatus: The status of the function\'s execution\n * \\retval  RTE_E_OK DID writing is successfull\n * \\retval  E_NOT_OK DID writing is not successfull\n */\n/*****************************************************************************/\n/*! \\misra PRQA 3432 "Macro expansion does not result in expression\nand according to the Coding Guideline rule 4.6 AUTOSAR Compiler Abstraction should be used" */', start_line_num=2062, end_line_num=2077, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 3432 */', start_line_num=2079, end_line_num=2079, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n         source and destination are the same type" */', start_line_num=2087, end_line_num=2088, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=2089, end_line_num=2089, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*****************************************************************************/\n/*!\n * \\fn      FUNC(void, RTE_CODE) Idp_Tx_BusKnockOutTmrUDS (P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) BusKnockOutTmrUDS_IF)\n * \\brief   Function what gives back the BusKnockout timer value.\n * \\param   [in] BusKnockOutTmrUDS_IF: Variable what will be store the asked value.\n * \\param   [out] BusKnockOutTmrUDS_IF: Variable what will be store the asked value.\n * \\return  None\n */\n/*****************************************************************************/\n/*! \\misra PRQA 3432 "Macro expansion does not result in expression\nand according to the Coding Guideline rule 4.6 AUTOSAR Compiler Abstraction should be used" */', start_line_num=2107, end_line_num=2117, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 3432 */', start_line_num=2119, end_line_num=2119, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*****************************************************************************/\n/*!\n * \\fn      FUNC(void, RTE_CODE) Idp_Tx_ECUKnockOutTmrUDS (P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) ECUKnockTmrUDS_IF)\n * \\brief   Function what gives back the EcuKnockout timer value.\n * \\param   [in] BusKnockOutTmrUDS_IF: Variable what will be store the asked value.\n * \\param   [out] BusKnockOutTmrUDS_IF: Variable what will be store the asked value.\n * \\return  None\n */\n/*****************************************************************************/\n/*! \\misra PRQA 3432 "Macro expansion does not result in expression\nand according to the Coding Guideline rule 4.6 AUTOSAR Compiler Abstraction should be used" */', start_line_num=2128, end_line_num=2138, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 3432 */', start_line_num=2140, end_line_num=2140, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*****************************************************************************/\n/*!\n * \\fn      FUNC(Std_ReturnType, RTE_CODE) Idp_x019C_Status_productionmode_ReadData\n *                                                                        (P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data)\n * \\brief   This function handles the 019C DID readability via UDS.\n * \\param   [in] Data: Variable what will be store the needed DID value\n * \\param   [out] Data: Variable what will be store the needed DID value\n * \\param   [out] retStatus: The status of the function\'s execution\n * \\return  Success of operation.\n * \\retval  E_OK - This value is always returned as defined in the AUTOSAR requirements.\n */\n/*****************************************************************************/\n/* VWMEB-Inv-303489 - Read Diagnostic Data */\n/*! \\misra PRQA 3432 "Macro expansion does not result in expression\nand according to the Coding Guideline rule 4.6 AUTOSAR Compiler Abstraction should be used" */', start_line_num=2150, end_line_num=2164, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 3432 */', start_line_num=2166, end_line_num=2166, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* Only Byte2 contains functions, which are affected by production mode. */', start_line_num=2176, end_line_num=2176, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n      source and destination are the same type" */', start_line_num=2186, end_line_num=2187, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=2188, end_line_num=2188, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*****************************************************************************/\n/*!\n * \\fn      FUNC(Std_ReturnType, RTE_CODE) Idp_x04FC_Productionmode_deactivate_ReadData\n *                                                                        (P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data)\n * \\brief   This function handles the 04FC DID readability via UDS.\n * \\param   [in] Data: Variable what will be store the needed DID value\n * \\param   [out] Data: Variable what will be store the needed DID value\n * \\param   [out] retStatus: The status of the function\'s execution\n * \\return  Success of operation.\n * \\retval  E_OK - This value is always returned as defined in the AUTOSAR requirements.\n */\n/*****************************************************************************/\n/* VWMEB-Inv-303489 - Read Diagnostic Data */\n/*! \\misra PRQA 3432 "Macro expansion does not result in expression\nand according to the Coding Guideline rule 4.6 AUTOSAR Compiler Abstraction should be used" */', start_line_num=2194, end_line_num=2208, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 3432 */', start_line_num=2210, end_line_num=2210, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n      source and destination are the same type" */', start_line_num=2219, end_line_num=2220, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=2221, end_line_num=2221, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*****************************************************************************/\n/*!\n * \\fn      FUNC(Std_ReturnType, RTE_CODE) Idp_x04FC_Productionmode_deactivate_WritedData\n *          (P2CONST(uint8, AUTOMATIC, RTE_APPL_DATA) Data, P2VAR(Dcm_NegativeResponseCodeType,\n *          AUTOMATIC, RTE_APPL_DATA) ErrorCode)\n * \\brief   This function handles the 04FC DID writing via UDS.\n * \\param   [in] Data: Variable what will be store the needed DID value\n * \\param   [in] ErrorCode: Variable what will be store the ErrorCode if the writing fail\n * \\param   [out] Data: Variable what will be store the needed DID value\n * \\param   [out] retStatus: The status of the function\'s execution\n * \\retval  RTE_E_OK DID writing is successfull\n * \\retval  E_NOT_OK DID writing is not successfull\n */\n/*****************************************************************************/\n/*! \\misra PRQA 3432 "Macro expansion does not result in expression\nand according to the Coding Guideline rule 4.6 AUTOSAR Compiler Abstraction should be used" */', start_line_num=2227, end_line_num=2242, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 3432 */', start_line_num=2245, end_line_num=2245, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* Process the incoming Data. Only 0x000000 is acceptable. */\n/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n      source and destination are the same type" */', start_line_num=2255, end_line_num=2257, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=2258, end_line_num=2258, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* Reset the configuration */\n/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n         source and destination are the same type" */', start_line_num=2269, end_line_num=2271, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=2272, end_line_num=2272, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* Store the new Data in the NvM immediately */', start_line_num=2274, end_line_num=2274, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment="/* set NRC 'REQUEST_OUT_OF_RANGE' */", start_line_num=2280, end_line_num=2280, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*****************************************************************************/\n/*!\n * \\fn      FUNC(Std_ReturnType, RTE_CODE) Idp_x04FE_Productionmode_ReadData\n *                                                                        (P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data)\n * \\brief   This function handles the 04FE DID readability via UDS.\n * \\param   [in] Data: Variable what will be store the needed DID value\n * \\param   [out] Data: Variable what will be store the needed DID value\n * \\param   [out] retStatus: The status of the function\'s execution\n * \\return  Success of operation.\n * \\retval  E_OK - This value is always returned as defined in the AUTOSAR requirements.\n */\n/*****************************************************************************/\n/* VWMEB-Inv-303489 - Read Diagnostic Data */\n/*! \\misra PRQA 3432 "Macro expansion does not result in expression\nand according to the Coding Guideline rule 4.6 AUTOSAR Compiler Abstraction should be used" */', start_line_num=2293, end_line_num=2307, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 3432 */', start_line_num=2309, end_line_num=2309, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n      source and destination are the same type" */', start_line_num=2315, end_line_num=2316, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=2317, end_line_num=2317, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*****************************************************************************/\n/*!\n * \\fn      FUNC(Std_ReturnType, RTE_CODE) Idp_x04FE_Productionmode_WriteData\n *          (P2CONST(uint8, AUTOMATIC, RTE_APPL_DATA) Data,\n *          P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC, RTE_APPL_DATA) ErrorCode)\n * \\brief   This function handles the 04FE DID writing via UDS.\n * \\param   [in] Data: Variable what will be store the needed DID value\n * \\param   [in] ErrorCode: Variable what will be store the ErrorCode if the writing fail\n * \\param   [out] Data: Variable what will be store the needed DID value\n * \\param   [out] retStatus: The status of the function\'s execution\n * \\retval  RTE_E_OK DID writing is successfull\n * \\retval  E_NOT_OK DID writing is not successfull\n */\n/*****************************************************************************/\n/*! \\misra PRQA 3432 "Macro expansion does not result in expression\nand according to the Coding Guideline rule 4.6 AUTOSAR Compiler Abstraction should be used" */', start_line_num=2323, end_line_num=2338, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 3432 */', start_line_num=2341, end_line_num=2341, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* Store the new function configuration */\n/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n         source and destination are the same type" */', start_line_num=2353, end_line_num=2355, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=2356, end_line_num=2356, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* Store in the NvM immediately */', start_line_num=2358, end_line_num=2358, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* [A: Q-LAH_PMode-21] */', start_line_num=2364, end_line_num=2364, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*****************************************************************************/\n/*!\n * \\fn      FUNC(Std_ReturnType, RTE_CODE) Idp_x0410_BootloaderTPBlocksize_WriteData\n *          (P2CONST(uint8, AUTOMATIC, RTE_APPL_DATA) Data,\n *          P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode)\n * \\brief   This function handles the 0410 DID writing via UDS.\n * \\param   [in] Data: Variable what will be store the needed DID value\n * \\param   [in] ErrorCode: Variable what will be store the ErrorCode if the writing fail\n * \\param   [out] Data: Variable what will be store the needed DID value\n * \\param   [out] retStatus: The status of the function\'s execution\n * \\retval  RTE_E_OK DID writing is successfull\n * \\retval  E_NOT_OK DID writing is not successfull\n */\n/*****************************************************************************/\n/*! \\misra PRQA 3432 "Macro expansion does not result in expression\nand according to the Coding Guideline rule 4.6 AUTOSAR Compiler Abstraction should be used" */\n/*! \\misra PRQA 3206 "The function prototype is generated by Tresos, which includes also not used arguments." */', start_line_num=2377, end_line_num=2393, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 3432 */', start_line_num=2396, end_line_num=2396, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 3206 */', start_line_num=2396, end_line_num=2396, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n      source and destination are the same type" */', start_line_num=2402, end_line_num=2403, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=2404, end_line_num=2404, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*****************************************************************************/\n/*!\n * \\fn      FUNC(Std_ReturnType, RTE_CODE) Idp_x02B3_Response_On_Event_ReadData\n *                                                                        (P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data)\n * \\brief   This function handles the 02B3 DID readability via UDS.\n * \\param   [in] Data: Variable what will be store the needed DID value\n * \\param   [out] Data: Variable what will be store the needed DID value\n * \\param   [out] retStatus: The status of the function\'s execution\n * \\return  Success of operation.\n * \\retval  E_OK - This value is always returned as defined in the AUTOSAR requirements.\n */\n/*****************************************************************************/\n/* VWMEB-Inv-303489 - Read Diagnostic Data */\n/*! \\misra PRQA 3432 "Macro expansion does not result in expression\nand according to the Coding Guideline rule 4.6 AUTOSAR Compiler Abstraction should be used" */', start_line_num=2415, end_line_num=2429, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 3432 */', start_line_num=2431, end_line_num=2431, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n     source and destination are the same type" */', start_line_num=2436, end_line_num=2437, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=2438, end_line_num=2438, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*****************************************************************************/\n/*!\n * \\fn      FUNC(Std_ReturnType, RTE_CODE) Idp_F1A1_VWDataSetVersionNumber_WriteData\n *          (P2CONST(uint8, AUTOMATIC, RTE_APPL_DATA) Data,\n *          P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode)\n * \\brief   This function handles the F1A1 DID writing via UDS.\n * \\param   [in] Data: Variable what will be store the needed DID value\n * \\param   [in] ErrorCode: Variable what will be store the ErrorCode if the writing fail\n * \\param   [out] Data: Variable what will be store the needed DID value\n * \\param   [out] retStatus: The status of the function\'s execution\n * \\retval  RTE_E_OK DID writing is successfull\n * \\retval  E_NOT_OK DID writing is not successfull\n */\n/*****************************************************************************/\n/*! \\misra PRQA 3432 "Macro expansion does not result in expression\nand according to the Coding Guideline rule 4.6 AUTOSAR Compiler Abstraction should be used" */', start_line_num=2444, end_line_num=2459, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 3432 */', start_line_num=2462, end_line_num=2462, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 2981: variable initialization recommended by Coding Guideline Rule 4.14 */', start_line_num=2465, end_line_num=2465, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 2981 */', start_line_num=2466, end_line_num=2466, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n     source and destination are the same type" */', start_line_num=2472, end_line_num=2473, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=2474, end_line_num=2474, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* Range check */', start_line_num=2475, end_line_num=2475, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* Range check */', start_line_num=2482, end_line_num=2482, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* If the range are correct */', start_line_num=2491, end_line_num=2491, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n        source and destination are the same type" */', start_line_num=2493, end_line_num=2494, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=2495, end_line_num=2495, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*****************************************************************************/\n/*!\n * \\fn      FUNC(Std_ReturnType, RTE_CODE) Idp_F1A1_VWDataSetVersionNumber_ReadData\n *                                                                        (P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data)\n * \\brief   This function handles the F1A1 DID readability via UDS.\n * \\param   [in] Data: Variable what will be store the needed DID value\n * \\param   [out] Data: Variable what will be store the needed DID value\n * \\param   [out] retStatus: The status of the function\'s execution\n * \\return  Success of operation.\n * \\retval  E_OK - This value is always returned as defined in the AUTOSAR requirements.\n */\n/*****************************************************************************/\n/* VWMEB-Inv-303489 - Read Diagnostic Data */\n/*! \\misra PRQA 3432 "Macro expansion does not result in expression\nand according to the Coding Guideline rule 4.6 AUTOSAR Compiler Abstraction should be used" */', start_line_num=2508, end_line_num=2522, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 3432 */', start_line_num=2524, end_line_num=2524, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n     source and destination are the same type" */', start_line_num=2529, end_line_num=2530, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=2531, end_line_num=2531, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*****************************************************************************/\n/*!\n * \\fn      FUNC(Std_ReturnType, RTE_CODE) Idp_F182_VWApplicationDataIdentification_ReadData\n *                                                                        (P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data)\n * \\brief   This function handles the F182 DID readability via UDS.\n * \\param   [in] Data: Variable what will be store the needed DID value\n * \\param   [out] Data: Variable what will be store the needed DID value\n * \\param   [out] retStatus: The status of the function\'s execution\n * \\return  Success of operation.\n * \\retval  E_OK - This value is always returned as defined in the AUTOSAR requirements.\n */\n/*****************************************************************************/\n/* VWMEB-Inv-303489 - Read Diagnostic Data */\n/*! \\misra PRQA 3432 "Macro expansion does not result in expression\nand according to the Coding Guideline rule 4.6 AUTOSAR Compiler Abstraction should be used" */', start_line_num=2537, end_line_num=2551, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 3432 */', start_line_num=2553, end_line_num=2553, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* copy data into the result buffer */\n/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n      source and destination are the same type" */', start_line_num=2558, end_line_num=2560, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=2561, end_line_num=2561, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*****************************************************************************/\n/*!\n * \\fn      FUNC(Std_ReturnType, RTE_CODE) Idp_F1F4_Bootloader_identification\n *                                                                        (P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data)\n * \\brief   This function provides the DID 0xF1F4 data for the UDS response.\n * \\param   [in] Data: Variable what will be store the needed DID value\n * \\param   [out] Data: Variable what will be store the needed DID value\n * \\param   [out] retStatus: The status of the function\'s execution\n * \\return  Success of operation.\n * \\retval  E_OK - This value is always returned as defined in the AUTOSAR requirements.\n */\n/*****************************************************************************/\n/* VWMEB-Inv-303489 - Read Diagnostic Data */\n/*! \\misra PRQA 3432 "Macro expansion does not result in expression\nand according to the Coding Guideline rule 4.6 AUTOSAR Compiler Abstraction should be used" */', start_line_num=2569, end_line_num=2583, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 3432 */', start_line_num=2585, end_line_num=2585, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 0310, 3305 "The casting works and intended for the good behavior." */', start_line_num=2587, end_line_num=2587, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0310,3305*/', start_line_num=2588, end_line_num=2588, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* Bootloader identification ID added in hex for ascii */', start_line_num=2590, end_line_num=2590, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*PWRVS CB.0000---- ---.00 ----*/', start_line_num=2594, end_line_num=2594, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* QAC: After the cast operator the "chkprg_is_valid_rom_addr" function checks that\n   it is pointing to valid memory space. */', start_line_num=2597, end_line_num=2598, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* copy F1F4 data from Info Table, which includes FLASH_CONFIG_SY */\n/* F1F4 format: DID_data[20:18] = FLASH_CONFIG_SY */', start_line_num=2602, end_line_num=2603, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* copy bootloader version number from NvM */\n/* F1F4 format: DID_data[16:13] = bootloader version number */\n/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n      source and destination are the same type" */', start_line_num=2606, end_line_num=2609, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=2610, end_line_num=2610, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* detect hardware version */', start_line_num=2615, end_line_num=2615, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment="/*'B'*/", start_line_num=2619, end_line_num=2619, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment="/*'P'*/", start_line_num=2620, end_line_num=2620, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment="/*'C'*/", start_line_num=2621, end_line_num=2621, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment="/*'3'*/", start_line_num=2622, end_line_num=2622, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment="/*'B'*/", start_line_num=2626, end_line_num=2626, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment="/*'M'*/", start_line_num=2627, end_line_num=2627, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment="/*'C'*/", start_line_num=2628, end_line_num=2628, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment="/*'2'*/", start_line_num=2629, end_line_num=2629, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment="/*'-'*/", start_line_num=2633, end_line_num=2633, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment="/*'-'*/", start_line_num=2634, end_line_num=2634, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment="/*'-'*/", start_line_num=2635, end_line_num=2635, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment="/*'-'*/", start_line_num=2636, end_line_num=2636, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* copy hardware version */\n/* F1F4 format: DID_data[28:25] = hardware version */\n/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n      source and destination are the same type" */', start_line_num=2640, end_line_num=2643, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=2644, end_line_num=2644, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* copy data into the result buffer */\n/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n      source and destination are the same type" */', start_line_num=2646, end_line_num=2648, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=2649, end_line_num=2649, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*****************************************************************************/\n/*!\n * \\fn      FUNC(void, RTE_CODE) Idp_ProvideProgAttemps\n *          (P2VAR(uint16, AUTOMATIC, RTE_APPL_DATA) SuccessProgAttemps,\n *          P2VAR(uint16, AUTOMATIC, RTE_APPL_DATA) ProgThreshold)\n * \\brief   This function provides the programming attempts.\n * \\param   [in] SuccessProgAttemps: Variable what will be store the success programming attempts\n * \\param   [out] ProgThreshold: Variable what will be store the programming attempts threshold\n * \\param   [out] retStatus: The status of the function\'s execution\n * \\return  None\n */\n/*****************************************************************************/\n/*! \\misra PRQA 3432 "Macro expansion does not result in expression\nand according to the Coding Guideline rule 4.6 AUTOSAR Compiler Abstraction should be used" */', start_line_num=2655, end_line_num=2668, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 3432 */', start_line_num=2670, end_line_num=2670, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 3432 */', start_line_num=2671, end_line_num=2671, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* DownGradeProtection incl. */', start_line_num=2673, end_line_num=2673, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 2981: variable initialization recommended by Coding Guideline Rule 4.14 */', start_line_num=2676, end_line_num=2676, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 2981 */', start_line_num=2677, end_line_num=2677, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* copy data into the result buffer */\n/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n      source and destination are the same type" */', start_line_num=2687, end_line_num=2689, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=2690, end_line_num=2690, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n      source and destination are the same type" */', start_line_num=2694, end_line_num=2695, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=2696, end_line_num=2696, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*****************************************************************************/\n/*!\n * \\fn      Idp_F41C_x02CE_OBD_Type_ReadData (uint8* Data)\n * \\brief   This function provides the OBD type data to DID 0xF41C and 0x02CE.\n * \\param   [out] Data: Output value of the DID 0xF41C and 0x02CE, always 5 (Not OBD compliant).\n * \\param   [in] Data: Variable what will be store the needed DID value\n * \\param   [out] Data: Variable what will be store the needed DID value\n * \\param   [out] retStatus: The status of the function\'s execution\n * \\return  Success of operation.\n * \\retval  RTE_E_OK - This value is always returned as defined in the AUTOSAR requirements.\n */\n/*****************************************************************************/\n/* VWMEB-Inv-303489 - Read Diagnostic Data */\n/*! \\misra PRQA 3432 "Macro expansion does not result in expression\nand according to the Coding Guideline rule 4.6 AUTOSAR Compiler Abstraction should be used" */', start_line_num=2705, end_line_num=2719, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*PRQA S 3432*/', start_line_num=2721, end_line_num=2721, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/**********************************************************************************************************************/\n/*!\n * \\fn      FUNC(void, RTE_CODE) Idp_TpBlockSizeDefault (boolean ConditionFulfilled)\n * \\brief   This function provide the default value for the BootloaderTPBlocksize in case of DefaultSession, ECUReset,\n *          or terminal OFF/ON.\n * \\param   [in]  ConditionFulfilled: Variable what store the condition completion status.\n * \\param   [out] DID_0410_BootloaderTPBlocksize: Variable what will be get the BootloaderTPBlocksize.\n */\n/*****************************************************************************/', start_line_num=2731, end_line_num=2739, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*****************************************************************************/\n/*!\n * \\fn      FUNC(Std_ReturnType, RTE_CODE) FD00_VsEA_HardwareIdentification_CU_ReadData\n *                                                                        (P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data)\n * \\brief   This function handles the FD00 DID readability via UDS.\n * \\param   [in] Data: Variable what will be store the needed DID value\n * \\param   [out] Data: Variable what will be store the needed DID value\n * \\param   [out] retStatus: The status of the function\'s execution\n * \\return  Success of operation.\n * \\retval  E_OK - This value is always returned as defined in the AUTOSAR requirements.\n */\n/*****************************************************************************/\n/* VWMEB-Inv-303495 - Read PWR Production session specific Diagnostic Data */\n/*! \\misra PRQA 3432 "Macro expansion does not result in expression\nand according to the Coding Guideline rule 4.6 AUTOSAR Compiler Abstraction should be used" */', start_line_num=2750, end_line_num=2764, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 3432 */', start_line_num=2766, end_line_num=2766, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n      source and destination are the same type" */', start_line_num=2771, end_line_num=2772, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=2773, end_line_num=2773, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*****************************************************************************/\n/*!\n * \\fn      FUNC(Std_ReturnType, RTE_CODE) FD01_VsEA_HardwareIdentification_PU_ReadData\n *                                                                        (P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data)\n * \\brief   This function handles the FD01 DID readability via UDS.\n * \\param   [in] Data: Variable what will be store the needed DID value\n * \\param   [out] Data: Variable what will be store the needed DID value\n * \\param   [out] retStatus: The status of the function\'s execution\n * \\return  Success of operation.\n * \\retval  E_OK - This value is always returned as defined in the AUTOSAR requirements.\n */\n/*****************************************************************************/\n/* VWMEB-Inv-303495 - Read PWR Production session specific Diagnostic Data */\n/*! \\misra PRQA 3432 "Macro expansion does not result in expression\nand according to the Coding Guideline rule 4.6 AUTOSAR Compiler Abstraction should be used" */', start_line_num=2779, end_line_num=2793, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 3432 */', start_line_num=2795, end_line_num=2795, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n      source and destination are the same type" */', start_line_num=2800, end_line_num=2801, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=2802, end_line_num=2802, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*****************************************************************************/\n/*!\n * \\fn      FUNC(Std_ReturnType, RTE_CODE) FD02_VsEA_HardwareIdentification_FilterBoard_ReadData\n *                                                                        (P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data)\n * \\brief   This function handles the FD02 DID readability via UDS.\n * \\param   [in] Data: Variable what will be store the needed DID value\n * \\param   [out] Data: Variable what will be store the needed DID value\n * \\param   [out] retStatus: The status of the function\'s execution\n * \\return  Success of operation.\n * \\retval  E_OK - This value is always returned as defined in the AUTOSAR requirements.\n */\n/*****************************************************************************/\n/* VWMEB-Inv-303495 - Read PWR Production session specific Diagnostic Data */\n/*! \\misra PRQA 3432 "Macro expansion does not result in expression\nand according to the Coding Guideline rule 4.6 AUTOSAR Compiler Abstraction should be used" */', start_line_num=2808, end_line_num=2822, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 3432 */', start_line_num=2824, end_line_num=2824, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n      source and destination are the same type" */', start_line_num=2829, end_line_num=2830, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=2831, end_line_num=2831, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*****************************************************************************/\n/*!\n * \\fn      FUNC(Std_ReturnType, RTE_CODE) FD03_VsEA_HardwareIdentification_IGBT_ReadData\n *                                                                        (P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data)\n * \\brief   This function handles the FD03 DID readability via UDS.\n * \\param   [in] Data: Variable what will be store the needed DID value\n * \\param   [out] Data: Variable what will be store the needed DID value\n * \\param   [out] retStatus: The status of the function\'s execution\n * \\return  Success of operation.\n * \\retval  E_OK - This value is always returned as defined in the AUTOSAR requirements.\n */\n/*****************************************************************************/\n/* VWMEB-Inv-303495 - Read PWR Production session specific Diagnostic Data */\n/*! \\misra PRQA 3432 "Macro expansion does not result in expression\nand according to the Coding Guideline rule 4.6 AUTOSAR Compiler Abstraction should be used" */', start_line_num=2840, end_line_num=2854, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 3432 */', start_line_num=2856, end_line_num=2856, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n      source and destination are the same type" */', start_line_num=2861, end_line_num=2862, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=2863, end_line_num=2863, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*****************************************************************************/\n/*!\n * \\fn      FUNC(Std_ReturnType, RTE_CODE) FD04_VsEA_HardwareIdentification_InvCover_ReadData\n *                                                                        (P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data)\n * \\brief   This function handles the FD04 DID readability via UDS.\n * \\param   [in] Data: Variable what will be store the needed DID value\n * \\param   [out] Data: Variable what will be store the needed DID value\n * \\param   [out] retStatus: The status of the function\'s execution\n * \\return  Success of operation.\n * \\retval  E_OK - This value is always returned as defined in the AUTOSAR requirements.\n */\n/*****************************************************************************/\n/* VWMEB-Inv-303495 - Read PWR Production session specific Diagnostic Data */\n/*! \\misra PRQA 3432 "Macro expansion does not result in expression\nand according to the Coding Guideline rule 4.6 AUTOSAR Compiler Abstraction should be used" */', start_line_num=2869, end_line_num=2883, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 3432 */', start_line_num=2885, end_line_num=2885, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n      source and destination are the same type" */', start_line_num=2890, end_line_num=2891, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=2892, end_line_num=2892, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*****************************************************************************/\n/*!\n * \\fn      FUNC(Std_ReturnType, RTE_CODE) FEFF_VsEA_MicrocontrollerId_ReadData\n *                                                                        (P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data)\n * \\brief   This function handles the FEFF DID readability via UDS.\n * \\param   [in] Data: Variable what will be store the needed DID value\n * \\param   [out] Data: Variable what will be store the needed DID value\n * \\param   [out] retStatus: The status of the function\'s execution\n * \\return  Success of operation.\n * \\retval  E_OK - This value is always returned as defined in the AUTOSAR requirements.\n */\n/*****************************************************************************/\n/* VWMEB-Inv-303495 - Read PWR Production session specific Diagnostic Data */\n/*! \\misra PRQA 3432 "Macro expansion does not result in expression\nand according to the Coding Guideline rule 4.6 AUTOSAR Compiler Abstraction should be used" */', start_line_num=2901, end_line_num=2915, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 3432 */', start_line_num=2917, end_line_num=2917, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n      source and destination are the same type" */', start_line_num=2923, end_line_num=2924, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=2925, end_line_num=2925, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* CPU uses 32-bit architecture and little-endian byte ordering so byte swap every 32 bit chunk.\n       * Assuming AURIX ID takes integer number of words. */', start_line_num=2929, end_line_num=2930, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 0492 "The array operand is needed for the correct data handling" */\n/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n         source and destination are the same type" */', start_line_num=2933, end_line_num=2935, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0492 */', start_line_num=2936, end_line_num=2936, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=2936, end_line_num=2936, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*****************************************************************************/\n/*!\n * \\fn      FUNC(Std_ReturnType, RTE_CODE) Idp_x0903_Expected_model_type_ReadData\n *                                                                        (P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data)\n * \\brief   This function handles the 0903 DID readability via UDS.\n * \\param   [in] Data: Variable what will be store the needed DID value\n * \\param   [out] Data: Variable what will be store the needed DID value\n * \\param   [out] retStatus: The status of the function\'s execution\n * \\return  Success of operation.\n * \\retval  E_OK - This value is always returned as defined in the AUTOSAR requirements.\n */\n/*****************************************************************************/\n/* VWMEB-Inv-303489 - Read Diagnostic Data */\n/*! \\misra PRQA 3432 "Macro expansion does not result in expression\nand according to the Coding Guideline rule 4.6 AUTOSAR Compiler Abstraction should be used" */', start_line_num=2943, end_line_num=2957, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 3432 */', start_line_num=2959, end_line_num=2959, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* copy data into the result buffer */\n/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n      source and destination are the same type" */', start_line_num=2963, end_line_num=2965, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=2966, end_line_num=2966, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*****************************************************************************/\n/*!\n * \\fn      FUNC(Std_ReturnType, RTE_CODE) Idp_x0903_Expected_model_type_WriteData\n *          (P2CONST(uint8, AUTOMATIC, RTE_APPL_DATA) Data,\n *          P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode)\n * \\brief   This function handles the 0903 DID writing via UDS.\n * \\param   [in] Data: Variable what will be store the needed DID value\n * \\param   [in] ErrorCode: Variable what will be store the ErrorCode if the writing fail\n * \\param   [out] Data: Variable what will be store the needed DID value\n * \\param   [out] retStatus: The status of the function\'s execution\n * \\retval  RTE_E_OK DID writing is successfull\n * \\retval  E_NOT_OK DID writing is not successfull\n */\n/*****************************************************************************/\n/*! \\misra PRQA 3432 "Macro expansion does not result in expression\nand according to the Coding Guideline rule 4.6 AUTOSAR Compiler Abstraction should be used" */\n/*! \\misra PRQA 3206 "The function prototype is generated by Tresos, which includes also not used arguments." */', start_line_num=2972, end_line_num=2988, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 3432 */', start_line_num=2990, end_line_num=2990, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 3206 */', start_line_num=2990, end_line_num=2990, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n      source and destination are the same type" */', start_line_num=2995, end_line_num=2996, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=2997, end_line_num=2997, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* Wait for the NvM to write the block */', start_line_num=3001, end_line_num=3001, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/******************************************************************************\n * \\brief   Name: Idp_x0448_ProgPrecond_ReadData\n * \\n       Description: Read DID 0448hex\n * \\param   [out] uint8* Data - output array containing DID value -\n *          Number and list of implemented programming preconditions\n * \\return  Std_ReturnType\n * \\retval  always RTE_E_OK\n *****************************************************************************/', start_line_num=3015, end_line_num=3022, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 3432 "Macro expansion does not result in expression\nand according to the Coding Guideline rule 4.6 AUTOSAR Compiler Abstraction should be used" */', start_line_num=3023, end_line_num=3024, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*PRQA S 3432*/', start_line_num=3026, end_line_num=3026, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* array subscripting can be applied here, As per AutoSAR config, Data points to an array */\n/* PRQA S 0492 ++ */', start_line_num=3030, end_line_num=3031, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0492 -- */', start_line_num=3042, end_line_num=3042, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* FUNC(Std_ReturnType, RTE_CODE) Idp_x0448_ProgPrecond_ReadData (P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data) */', start_line_num=3045, end_line_num=3045, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*********************************************************************************************************************/\n/*!\n * \\fn      void Idp_x02CF_OBD_class_description_ReadData(uint8* Data)\n * \\brief   This function provides the OBD class description to DID 0x02CF.\n * \\param   [out] Data: Output value of the DID 0x02CF\n * \\return  Success of operation.\n * \\retval  RTE_E_OK - This value is always returned as defined in the AUTOSAR requirements.\n */\n/*********************************************************************************************************************/\n/*! \\misra PRQA 3432 "Macro expansion does not result in expression\nand according to the Coding Guideline rule 4.6 AUTOSAR Compiler Abstraction should be used" */', start_line_num=3047, end_line_num=3057, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*PRQA S 3432*/', start_line_num=3059, end_line_num=3059, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 0492 "Array subscripting can be applied here, as per AutoSAR config, Data points to an array." */', start_line_num=3063, end_line_num=3063, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0492 */\n/*! \\misra PRQA 0492 "Array subscripting can be applied here, as per AutoSAR config, Data points to an array." */', start_line_num=3064, end_line_num=3065, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0492 */', start_line_num=3066, end_line_num=3066, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*****************************************************************************/\n/*!\n * \\fn      FUNC(void, BSW_CODE) Idp_InitializeAdaptionValue(void)\n * \\brief   Function what send the part of the 0903 DID value to the VW component.\n * \\param   [in] none\n * \\param   [out] none\n * \\return  None\n */\n/*****************************************************************************/', start_line_num=3072, end_line_num=3080, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*VW coding value is stored in NVM and must be read and forwarded before the VW component is initialized.*/\n/*In the 0x0903_Expected_model_type DID, the 0-3 bits contain the value that should be forwareded to the\n    *                                                                                 VW component(bytes are swapped)*/', start_line_num=3083, end_line_num=3085, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*****************************************************************************/\n/*!\n * \\fn      FUNC(void, RTE_CODE) Idp_SetBLKmDate (P2CONST(uint8, AUTOMATIC, RTE_APPL_DATA) Mileage_data,\n                                                                    P2CONST(uint8, AUTOMATIC, RTE_APPL_DATA) Date_data)\n * \\brief   Write the current Date and Mileage into the BL nvm ram block\n * \\param   [in] Mileage_data: Variable what contain the mileage.\n * \\param   [in] Date_data: Variable what contain the date.\n * \\param   [out] none\n * \\return  None\n */\n/*****************************************************************************/', start_line_num=3091, end_line_num=3101, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* update ram block */\n/*! \\misra PRQA 0492 "The array operand is needed for the correct data handling" */', start_line_num=3107, end_line_num=3108, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0492 */\n/*! \\misra PRQA 0492 "The array operand is needed for the correct data handling" */', start_line_num=3109, end_line_num=3110, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0492 */\n/*! \\misra PRQA 0315  "Implicit conversion unavoidable with memcpy function,\n      source and destination are the same type" */', start_line_num=3111, end_line_num=3113, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 0315 */', start_line_num=3114, end_line_num=3114, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! \\misra PRQA 4800 "This define automatically generated" */', start_line_num=3120, end_line_num=3120, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/* PRQA S 4800 */', start_line_num=3121, end_line_num=3121, type_="Script didn't search for type", function="Script didn't search for function", func_type=False), CodeComment(comment='/*! @} doxygen end of group definition */', start_line_num=3125, end_line_num=3125, type_="Script didn't search for type", function="Script didn't search for function", func_type=False)]